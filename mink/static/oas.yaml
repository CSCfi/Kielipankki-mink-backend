openapi: 3.0.0
info:
  title: Mink API
  version: 1.0.0
  description: "# Introduction\nWeb API serving as a backend to Mink.\n\nFor now the\
    \ API is used for uploading corpus data to a storage server and processing that\
    \ data with Sparv.\n\n# Workflow\nA workflow for processing data with Sparv via\
    \ Mink could look like this:\n\n1. <a href=\"#operation/createcorpus\">Create\
    \ a new corpus</a>\n2. <a href=\"#operation/uploadsources\">Upload some corpus\
    \ source files</a>\n3. <a href=\"#operation/uploadconfig\">Upload a corpus config\
    \ file</a>\n4. <a href=\"#operation/runSparv\">Run Sparv</a>\n5. <a href=\"#operation/resourceinfo\"\
    >Check the status</a>\n6. <a href=\"#operation/downloadexports\">Download export\
    \ files</a>\n7. <a href=\"#operation/installinKorp\">Install the corpus in Korp</a>\
    \ / <a href=\"#operation/installinStrix\">Strix</a>\n\n# Parameters\nParameters\
    \ such as `corpus_id` can usually be provided as a query parameter or as form\
    \ data.\nThe following two examples will thus result in the same response:\n\n\
    `curl -X GET '{{host}}/list-sources?corpus_id=some_corpus_name' -H 'Authorization:\
    \ Bearer YOUR_JWT`\n\n`curl -X GET -F \"corpus_id=some_corpus_name\" '{{host}}/list-sources'\
    \ -H 'Authorization: Bearer YOUR_JWT`\n\n# Responses\n- Most responses will be\
    \ in json format.\n- Json responses contain a `status` field which will have the\
    \ value `success` if the response code is 200 and\n  `error` otherwise. Thus this\
    \ `status` merely reports whether the call was processed correctly.\n- All json\
    \ responses also contain a `return_code` field with a unique code that can be\
    \ used for mapping to\n  human-friendly error messages.\n- Most responses contain\
    \ a `message` field with information about what was done during the call or where\
    \ things went\n  wrong.\n- Each call may have an arbitrary amount of additional\
    \ fields containing more information or data."
  x-logo:
    url: https://raw.githubusercontent.com/spraakbanken/mink-backend/main/mink/static/mink.svg
  contact:
    name: Spr√•kbanken
    url: https://spraakbanken.gu.se/
    email: sb-info@svenska.gu.se
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
- url: https://ws.spraakbanken.gu.se/ws/mink
  description: Test server
paths:
  /create-corpus:
    post:
      tags:
      - Manage Corpora
      summary: create corpus
      description: 'Creates a new corpus on the storage server.


        ### Example


        ```.bash

        curl -X POST ''{{host}}/create-corpus'' -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: createcorpus
      parameters: []
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtff' created successfully
                  corpus_id:
                    type: string
                    example: mink-dxh6e6wtff
                  return_code:
                    type: string
                    example: created_corpus
              example:
                status: success
                message: Corpus 'mink-dxh6e6wtff' created successfully
                corpus_id: mink-dxh6e6wtff
                return_code: created_corpus
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to create corpus
                  return_code:
                    type: string
                    example: failed_creating_corpus
              example:
                status: error
                message: Failed to create corpus
                return_code: failed_creating_corpus
      deprecated: false
  /list-corpora:
    get:
      tags:
      - Manage Corpora
      summary: list corpora
      description: 'Lists the IDs of previously uploaded corpora.


        ### Example


        ```.bash

        curl ''{{host}}/list-corpora'' -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: listcorpora
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Listing available corpora
                  corpora:
                    type: array
                    example: &id001
                    - mink-dxh6e6wtff
                  return_code:
                    type: string
                    example: listing_corpora
              example:
                status: success
                message: Listing available corpora
                corpora: *id001
                return_code: listing_corpora
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
      deprecated: false
  /list-korp-corpora:
    get:
      tags:
      - Manage Corpora
      summary: list Korp corpora
      description: 'Lists the IDs of Mink corpora installed in Korp.


        ### Example


        ```.bash

        curl ''{{host}}/list-korp-corpora'' -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: listKorpcorpora
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Listing corpora installed in Korp
                  corpora:
                    type: array
                    example: &id002
                    - mink-dxh6e6wtff
                  return_code:
                    type: string
                    example: listing_korp_corpora
              example:
                status: success
                message: Listing corpora installed in Korp
                corpora: *id002
                return_code: listing_korp_corpora
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
      deprecated: false
  /remove-corpus:
    delete:
      tags:
      - Manage Corpora
      summary: remove corpus
      description: 'Removes a corpus from the storage server. Will attempt to abort
        any running job for this corpus and also remove it from the Sparv server.


        ### Example


        ```.bash

        curl -X DELETE ''{{host}}/remove-corpus?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT''

        ```'
      operationId: removecorpus
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtff' successfully removed
                  return_code:
                    type: string
                    example: removed_corpus
              example:
                status: success
                message: Corpus 'mink-dxh6e6wtff' successfully removed
                return_code: removed_corpus
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to remove corpus 'mink-dxh6e6wtff' from Korp
                  return_code:
                    type: string
                    example: failed_removing_korp
              example:
                status: error
                message: Failed to remove corpus 'mink-dxh6e6wtff' from Korp
                return_code: failed_removing_korp
      deprecated: false
  /upload-sources:
    put:
      tags:
      - Manage Sources
      summary: upload sources
      description: 'Uploads the attached files as corpus source files to the storage
        server. When uploading a file with a name that already exists it will be replaced.


        ### Example


        ```.bash

        curl -X PUT -F "files[]=@/absolute/path/to/localfile1.txt" -F "files[]=@/absolute/path/to/localfile2.txt"
        ''{{host}}/upload-sources?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT''

        ```'
      operationId: uploadsources
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Source files successfully added to 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: uploaded_sources
              example:
                status: success
                message: Source files successfully added to 'mink-dxh6e6wtff'
                return_code: uploaded_sources
        '400':
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to upload some source files to 'mink-dxh6e6wtff'
                      due to incompatible file extensions
                  file:
                    type: string
                    example: text.txt
                  info:
                    type: string
                    example: incompatible file extensions
                  current_file_extension:
                    type: string
                    example: .txt
                  existing_file_extension:
                    type: string
                    example: .xml
                  return_code:
                    type: string
                    example: failed_uploading_sources_incompatible_file_extension
              example:
                status: error
                message: Failed to upload some source files to 'mink-dxh6e6wtff' due
                  to incompatible file extensions
                file: text.txt
                info: incompatible file extensions
                current_file_extension: .txt
                existing_file_extension: .xml
                return_code: failed_uploading_sources_incompatible_file_extension
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '413':
          description: REQUEST ENTITY TOO LARGE
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Request data too large (max 100 MB per upload)
                  max_content_length:
                    type: integer
                    example: 104857600
                  return_code:
                    type: string
                    example: data_too_large
              example:
                status: error
                message: Request data too large (max 100 MB per upload)
                max_content_length: 104857600
                return_code: data_too_large
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to upload source files to 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: failed_uploading_sources
              example:
                status: error
                message: Failed to upload source files to 'mink-dxh6e6wtff'
                return_code: failed_uploading_sources
      deprecated: false
  /list-sources:
    get:
      tags:
      - Manage Sources
      summary: list sources
      description: 'Lists the available corpus source files.


        ### Example


        ```.bash

        curl -X GET ''{{host}}/list-sources?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT''

        ```'
      operationId: listsources
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Current source files for 'mink-dxh6e6wtff'
                  contents:
                    type: array
                    example: &id003
                    - name: dokument1.xml
                      type: application/xml
                      last_modified: '2022-06-10T17:05:18+02:00'
                      size: 1397
                      path: dokument1.xml
                    - name: dokument2.xml
                      type: application/xml
                      last_modified: '2022-06-10T17:05:16+02:00'
                      size: 116
                      path: dokument2.xml
                  return_code:
                    type: string
                    example: listing_sources
              example:
                status: success
                message: Current source files for 'mink-dxh6e6wtff'
                contents: *id003
                return_code: listing_sources
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to list source files in 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: failed_listing_sources
              example:
                status: error
                message: Failed to list source files in 'mink-dxh6e6wtff'
                return_code: failed_listing_sources
      deprecated: false
  /download-sources:
    get:
      tags:
      - Manage Sources
      summary: download sources
      description: 'Downloads corpus source files from the storage server as zip file.


        The parameter `file` may be used to download a specific source file. This
        parameter must either be a file name or an absolute path on the Storage server.
        The `zip` parameter may be set to `false` in combination the the `file` param
        to avoid zipping the file to be downloaded.


        ### Example


        ```.bash

        curl -X GET ''{{host}}/download-sources?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT'' --output some_corpus_name_sources.zip

        ```'
      operationId: downloadsources
      parameters:
      - name: corpus_id
        in: query
        required: true
        style: form
        schema:
          type: string
          example: mink-dxh6e6wtff
      - name: file
        in: query
        required: false
        style: form
        schema:
          type: string
          example: dokument1.xml
      - &id019
        name: zip
        in: query
        required: false
        style: form
        schema:
          type: string
          example: 'true'
      responses:
        '200':
          description: OK
          content:
            application/zip:
              schema:
                type: string
                example: "PK\x03\x04\x14\0\0\0\0\0\x01VhR\0\0\0\0\0\0\0\0\0\0\0\0\a\
                  \0\0\0source/PK\x03\x04\n\0\b\0\0\0ÔøΩ{bR\0\0\0\0\0\0\0\0\0\0\0\0\x14\
                  \0\0\0source/dokument1.xml<dokument>\n\t<text forfattare=\"Sparvutvecklare\"\
                  \ date=\"2020-03-11\" id=\"1\">\nHej! Det h√§r √§r en korpus.\n\n\
                  Astrid Lindgren √§r f√∂dd i Vimmerby 1907.\n\nOch h√§r kommer den tredje\
                  \ meningen i ett nytt stycke.\n\nSista meningen √§r kort och inneh√•ller\
                  \ en sammans√§ttningsform: f√∂delsedagskalas.\n\t</text>\n\n\t<text\
                  \ forfattare=\"Wikipedia\" date=\"2020-03-16\" id=\"2\">\nSpr√•kbanken\
                  \ √§r en forskningsenhet vid G√∂teborgs universitet. Den inr√§ttades\
                  \ som en nationell resurs 1975, som ett direkt resultat av Sture\
                  \ All√©ns pionj√§rinsatser inom svensk korpuslingvistik under 1960-talet.\
                  \ Spr√•kbankens uppdrag blev och √§r fortfarande att samla in, f√∂r√§dla\
                  \ och tillg√§ngligg√∂ra spr√•kresurser √•t forskare och allm√§nheten,\
                  \ och att bedriva forskning och utveckling som fr√§mjar s√•n anv√§ndning.\n\
                  \nI Spr√•kbanken finns en unik kompetens vad g√§ller svenska textkorpusar,\
                  \ parallellkorpusar, svenska elektroniska lexikonresurser samt spr√•kteknologiska\
                  \ verktyg f√∂r att bearbeta, annotera och visa upp textkorpusar.\
                  \ Huvuddelen av materialet √§r modernt, men ambitionen √§r att resurserna\
                  \ ska avspegla hela den skrivna svenskans historia - fr√•n medeltida\
                  \ fornsvenska till modern svenska - med alla dess genrer. Huvuddelen\
                  \ av resurserna, korpusar och lexikon, √§r fritt √•tkomliga f√∂r s√∂kning\
                  \ via webbgr√§nssnitt.\n\t</text>\n\n\t<text id=\"1\">Hej <i> p√•\
                  \ dig. Kan vi</i> hantera √∂verlappande taggar?</text>\n</dokument>\n\
                  PK\a\bÔøΩ\t\0Wt\x05\0\0t\x05\0\0PK\x03\x04\n\0\b\0\0\0ÔøΩ{bR\0\0\0\0\
                  \0\0\0\0\0\0\0\0\x14\0\0\0source/dokument2.xml<text>\nHej! Det h√§r\
                  \ √§r en annan text.\n\nDen √§r j√§ttekort. Den har bara tre meningar\
                  \ och ingen metadata.\n</text>\nPK\a\bÔøΩ\x1DxÔøΩs\0\0\0s\0\0\0PK\x01\
                  \x02-\x03\x14\0\0\0\0\0\x01VhR\0\0\0\0\0\0\0\0\0\0\0\0\a\0\0\0\0\
                  \0\0\0\0\0\x10\0ÔøΩA\0\0\0\0source/PK\x01\x02-\x03\n\0\b\0\0\0ÔøΩ{bRÔøΩ\t\
                  \0Wt\x05\0\0t\x05\0\0\x14\0\0\0\0\0\0\0\0\0\0\0ÔøΩÔøΩ%\0\0\0source/dokument1.xmlPK\x01\
                  \x02-\x03\n\0\b\0\0\0ÔøΩ{bRÔøΩ\x1DxÔøΩs\0\0\0s\0\0\0\x14\0\0\0\0\0\0\0\
                  \0\0\0\0ÔøΩÔøΩÔøΩ\x05\0\0source/dokument2.xmlPK\x05\x06\0\0\0\0\x03\0\x03\
                  \0ÔøΩ\0\0\0ÔøΩ\x06\0\0\0\0"
              example: "PK\x03\x04\x14\0\0\0\0\0\x01VhR\0\0\0\0\0\0\0\0\0\0\0\0\a\0\
                \0\0source/PK\x03\x04\n\0\b\0\0\0ÔøΩ{bR\0\0\0\0\0\0\0\0\0\0\0\0\x14\0\
                \0\0source/dokument1.xml<dokument>\n\t<text forfattare=\"Sparvutvecklare\"\
                \ date=\"2020-03-11\" id=\"1\">\nHej! Det h√§r √§r en korpus.\n\nAstrid\
                \ Lindgren √§r f√∂dd i Vimmerby 1907.\n\nOch h√§r kommer den tredje meningen\
                \ i ett nytt stycke.\n\nSista meningen √§r kort och inneh√•ller en sammans√§ttningsform:\
                \ f√∂delsedagskalas.\n\t</text>\n\n\t<text forfattare=\"Wikipedia\"\
                \ date=\"2020-03-16\" id=\"2\">\nSpr√•kbanken √§r en forskningsenhet\
                \ vid G√∂teborgs universitet. Den inr√§ttades som en nationell resurs\
                \ 1975, som ett direkt resultat av Sture All√©ns pionj√§rinsatser inom\
                \ svensk korpuslingvistik under 1960-talet. Spr√•kbankens uppdrag blev\
                \ och √§r fortfarande att samla in, f√∂r√§dla och tillg√§ngligg√∂ra spr√•kresurser\
                \ √•t forskare och allm√§nheten, och att bedriva forskning och utveckling\
                \ som fr√§mjar s√•n anv√§ndning.\n\nI Spr√•kbanken finns en unik kompetens\
                \ vad g√§ller svenska textkorpusar, parallellkorpusar, svenska elektroniska\
                \ lexikonresurser samt spr√•kteknologiska verktyg f√∂r att bearbeta,\
                \ annotera och visa upp textkorpusar. Huvuddelen av materialet √§r\
                \ modernt, men ambitionen √§r att resurserna ska avspegla hela den\
                \ skrivna svenskans historia - fr√•n medeltida fornsvenska till modern\
                \ svenska - med alla dess genrer. Huvuddelen av resurserna, korpusar\
                \ och lexikon, √§r fritt √•tkomliga f√∂r s√∂kning via webbgr√§nssnitt.\n\
                \t</text>\n\n\t<text id=\"1\">Hej <i> p√• dig. Kan vi</i> hantera √∂verlappande\
                \ taggar?</text>\n</dokument>\nPK\a\bÔøΩ\t\0Wt\x05\0\0t\x05\0\0PK\x03\
                \x04\n\0\b\0\0\0ÔøΩ{bR\0\0\0\0\0\0\0\0\0\0\0\0\x14\0\0\0source/dokument2.xml<text>\n\
                Hej! Det h√§r √§r en annan text.\n\nDen √§r j√§ttekort. Den har bara tre\
                \ meningar och ingen metadata.\n</text>\nPK\a\bÔøΩ\x1DxÔøΩs\0\0\0s\0\0\
                \0PK\x01\x02-\x03\x14\0\0\0\0\0\x01VhR\0\0\0\0\0\0\0\0\0\0\0\0\a\0\
                \0\0\0\0\0\0\0\0\x10\0ÔøΩA\0\0\0\0source/PK\x01\x02-\x03\n\0\b\0\0\0\
                ÔøΩ{bRÔøΩ\t\0Wt\x05\0\0t\x05\0\0\x14\0\0\0\0\0\0\0\0\0\0\0ÔøΩÔøΩ%\0\0\0source/dokument1.xmlPK\x01\
                \x02-\x03\n\0\b\0\0\0ÔøΩ{bRÔøΩ\x1DxÔøΩs\0\0\0s\0\0\0\x14\0\0\0\0\0\0\0\0\
                \0\0\0ÔøΩÔøΩÔøΩ\x05\0\0source/dokument2.xmlPK\x05\x06\0\0\0\0\x03\0\x03\0\
                ÔøΩ\0\0\0ÔøΩ\x06\0\0\0\0"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: The source file you are trying to download does not exist
                  return_code:
                    type: string
                    example: source_not_found
              example:
                status: error
                message: The source file you are trying to download does not exist
                return_code: source_not_found
      deprecated: false
  /remove-sources:
    delete:
      tags:
      - Manage Sources
      summary: remove sources
      description: 'Remove the source files given in the `remove` parameter from the
        corpus. Files are provided as a comma-separated list of paths relative to
        the source directory.


        If any files could not be removed they will be listed in the error response.


        ### Example


        ```.bash

        curl -X DELETE ''{{host}}/remove-sources?corpus_id=some_corpus_name&remove=dokument1.xml,dokument2.xml''
        -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: removesources
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      - name: remove
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dokument1.xml,dokument2.xml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Source files for 'mink-dxh6e6wtff' successfully removed
                  return_code:
                    type: string
                    example: removed_sources
              example:
                status: success
                message: Source files for 'mink-dxh6e6wtff' successfully removed
                return_code: removed_sources
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: No files provided for removal
                  return_code:
                    type: string
                    example: missing_sources_remove
              example:
                status: error
                message: No files provided for removal
                return_code: missing_sources_remove
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to remove some source files form 'mink-dxh6e6wtff'.
                  failed:
                    type: array
                    example: &id004
                    - dokument2.xml
                  succeeded:
                    type: array
                    example: &id005
                    - dokument1.xml
                  return_code:
                    type: string
                    example: failed_removing_some_sources
              example:
                status: error
                message: Failed to remove some source files form 'mink-dxh6e6wtff'.
                failed: *id004
                succeeded: *id005
                return_code: failed_removing_some_sources
      deprecated: false
  /upload-config:
    put:
      tags:
      - Manage Config
      summary: upload config
      description: 'Uploads a corpus configuration, either as a file or as plain text
        with the `config` parameter. The config must be in yaml format. Read more
        about corpus config files in [the Sparv Pipeline documentation](https://spraakbanken.gu.se/sparv/#/user-manual/corpus-configuration).


        If a config file already exists for the given corpus it will be replaced by
        the newly uploaded one.


        Please note that any yaml comments may be removed from your config upon upload.


        ### Example


        ```.bash

        curl -X PUT -F "files[]=@/absolute/path/to/config.yaml;type=text/yaml" ''{{host}}/upload-config?corpus_id=some_corpus_name''
        -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: uploadconfig
      parameters:
      - name: corpus_id
        in: query
        required: true
        style: form
        schema:
          type: string
          example: mink-dxh6e6wtff
      - name: config
        in: query
        required: false
        style: form
        schema:
          type: string
          example: 'metadata:\n    id: mink-dxh6e6wtff\nimport:\n    document_annotation:
            text\n    importer: xml_import:parse\nexport:\n    annotations:\n        -
            <sentence>:misc.id\n        - <token:baseform>\n        - <token:pos>\n        -
            <token>:sensaldo.sentiment_label\n        - SWE_DEFAULT.swener\n    source_annotations:\n        -
            dokument as document\n        - text:forfattare as author\n        - ...\ncsv_export:\n    source_annotations:\n        -
            text:id\n        - text:date\n        - text:forfattare as author'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Config file successfully uploaded for 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: uploaded_config
              example:
                status: success
                message: Config file successfully uploaded for 'mink-dxh6e6wtff'
                return_code: uploaded_config
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: The importer in your config file is not compatible with
                      your source files
                  current_importer:
                    type: string
                    example: text_import
                  expected_importer:
                    type: string
                    example: xml_import
                  return_code:
                    type: string
                    example: incompatible_config_importer
              example:
                status: error
                message: The importer in your config file is not compatible with your
                  source files
                current_importer: text_import
                expected_importer: xml_import
                return_code: incompatible_config_importer
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
      deprecated: false
  /download-config:
    get:
      tags:
      - Manage Config
      summary: download config
      description: 'Downloads the corpus config file (in yaml format).


        ### Example


        ```.bash

        curl -X GET ''{{host}}/download-config?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT''

        ```'
      operationId: downloadconfig
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            text/yaml; charset=utf-8:
              schema:
                type: string
                example: "metadata:\n  id: mink-dxh6e6wtff\nimport:\n  text_annotation:\
                  \ text\n  importer: xml_import:parse\nexport:\n  annotations:\n\
                  \  - <sentence>:misc.id\n  - <token:baseform>\n  - <token:pos>\n\
                  \  - <token>:sensaldo.sentiment_label\n  - SWE_DEFAULT.swener\n\
                  \  source_annotations:\n  - dokument as document\n  - text:forfattare\
                  \ as author\n  - '...'\ncsv_export:\n  source_annotations:\n  -\
                  \ text:id\n  - text:date\n  - text:forfattare as author\n\n"
              example: "metadata:\n  id: mink-dxh6e6wtff\nimport:\n  text_annotation:\
                \ text\n  importer: xml_import:parse\nexport:\n  annotations:\n  -\
                \ <sentence>:misc.id\n  - <token:baseform>\n  - <token:pos>\n  - <token>:sensaldo.sentiment_label\n\
                \  - SWE_DEFAULT.swener\n  source_annotations:\n  - dokument as document\n\
                \  - text:forfattare as author\n  - '...'\ncsv_export:\n  source_annotations:\n\
                \  - text:id\n  - text:date\n  - text:forfattare as author\n\n"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: No config file found for corpus 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: config_not_found
              example:
                status: error
                message: No config file found for corpus 'mink-dxh6e6wtff'
                return_code: config_not_found
      deprecated: false
  /run-sparv:
    put:
      tags:
      - Process Corpus
      summary: run Sparv
      description: 'Adds an annotation job to the queue. The requested export formats
        may be supplied as a comma-separated list to the `exports` parameter. If no
        export formats are specified, the `xml_export:pretty` export will be generated
        by default.


        The `files` parameter can be used to run the pipeline on a part of the corpus.
        The key to `files` is a comma-separated list of file names without file extensions,
        e.g. `files=dokument1,dokument2`.


        There can only be one active job (annotation or installation) for each corpus
        at a time. A job must finish or be aborted before a new one can be started.


        ### Example


        ```.bash

        curl -X PUT -F "corpus_id=some_corpus_name" -F "exports=csv_export:csv,stats_export:freq_list,xml_export:pretty"
        ''{{host}}/run-sparv'' -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: runSparv
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      - name: exports
        in: query
        required: false
        style: form
        schema:
          type: string
          example: csv_export:csv,stats_export:freq_list,xml_export:pretty
      - name: files
        in: query
        required: false
        style: form
        schema:
          type: string
          example: dokument1,document2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Job has been queued
                  resource:
                    type: object
                    example: &id006
                      id: mink-dxh6e6wtff
                      public_id: mink-dxh6e6wtff
                      name:
                        swe: Annes och Martins testkorpus
                        eng: ''
                      type: corpus
                      source_files:
                      - name: dokument2.xml
                        type: text/xml
                        last_modified: '2022-12-22T11:25:25+01:00'
                        size: 115
                        path: dokument2.xml
                      - name: dokument3.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:44+02:00'
                        size: 41
                        path: dokument3.xml
                      - name: dokument4.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:44+02:00'
                        size: 461
                        path: dokument4.xml
                      - name: dokument1.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:49+02:00'
                        size: 1394
                        path: dokument1.xml
                  job:
                    type: object
                    example: &id007
                      status:
                        sync2sparv: none
                        sync2storage: none
                        sparv: waiting
                        korp: none
                        strix: none
                      current_process: sparv
                      pid: null
                      started: '2024-01-02T14:31:26+01:00'
                      done: null
                      sparv_exports:
                      - csv_export:csv
                      - stats_export:freq_list
                      - xml_export:pretty
                      current_files:
                      - dokument1
                      - dokument2
                      install_scrambled: true
                      installed_korp: true
                      installed_strix: true
                      latest_seconds_taken: 0
                      priority: 1
                      warnings: ''
                      errors: ''
                      sparv_output: ''
                      last_run_started: '2024-01-02T14:31:26+01:00'
                      last_run_ended: ''
                      progress: 0%
                  return_code:
                    type: string
                    example: job_queued
              example:
                status: success
                message: Job has been queued
                resource: *id006
                job: *id007
                return_code: job_queued
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: The importer in your config file is not compatible with
                      your source files
                  current_importer:
                    type: string
                    example: text_import
                  expected_importer:
                    type: string
                    example: xml_import
                  return_code:
                    type: string
                    example: incompatible_config_importer
              example:
                status: error
                message: The importer in your config file is not compatible with your
                  source files
                current_importer: text_import
                expected_importer: xml_import
                return_code: incompatible_config_importer
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: No source files found for 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: no_sources_found
              example:
                status: error
                message: No source files found for 'mink-dxh6e6wtff'
                return_code: no_sources_found
      deprecated: false
  /resource-info:
    get:
      tags:
      - Process Corpus
      summary: resource info
      description: 'Reports general information about a resource and the status of
        the current job (if there is any).


        On a setup where the storage server is separated from the Sparv server, this
        request needs to be made once the corpus is done processing in order for the
        results to be synced to the storage server.


        When the `corpus_id` parameter is supplied only the job corresponding to that
        corpus ID is reported.


        The different `job_status` codes can be looked up by calling [{{host}}/status-codes]({{host}}/status-codes).
        If the annotation process has been started successfully a percentage of the
        completed annotation progress will be shown in the `progress` field.


        ### Example


        ```.bash

        curl -X GET ''{{host}}/resource-info'' -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: resourceinfo
      parameters:
      - name: corpus_id
        in: query
        required: false
        style: form
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Listing resource infos
                  resources:
                    type: array
                    example: &id008
                    - status: success
                      message: Job was completed successfully!
                      resource:
                        id: mink-vcghkzqgux
                        name:
                          swe: SVT
                          eng: SVT
                        type: corpus
                        source_files:
                        - last_modified: '2023-04-14T15:19:37+02:00'
                          name: artikel1.odt
                          path: artikel1.odt
                          size: 43428
                          type: unknown
                        - last_modified: '2023-04-14T15:19:37+02:00'
                          name: artikel2.odt
                          path: artikel2.odt
                          size: 43529
                          type: unknown
                        - last_modified: '2023-04-14T15:19:38+02:00'
                          name: artikel3.odt
                          path: artikel3.odt
                          size: 38061
                          type: unknown
                        - last_modified: '2023-04-14T15:19:38+02:00'
                          name: artikel4.odt
                          path: artikel4.odt
                          size: 33932
                          type: unknown
                        - last_modified: '2023-04-14T15:19:38+02:00'
                          name: artikel5.odt
                          path: artikel5.odt
                          size: 38634
                          type: unknown
                        - last_modified: '2023-04-14T15:02:44+02:00'
                          name: artikel6.odt
                          path: artikel6.odt
                          size: 33762
                          type: unknown
                      job:
                        status:
                          sync2sparv: none
                          sync2storage: none
                          sparv: done
                          korp: none
                          strix: done
                        current_process: strix
                        pid: null
                        started: '2023-09-11T11:12:28+02:00'
                        done: '2023-09-11T11:13:07.290000+02:00'
                        sparv_exports:
                        - xml_export:pretty
                        - csv_export:csv
                        - stats_export:sbx_freq_list
                        current_files: []
                        install_scrambled: false
                        installed_korp: true
                        installed_strix: true
                        latest_seconds_taken: 39.29
                        priority: ''
                        warnings: WARNING 'text:misc.source' is missing a definition,
                          and 'text_source' is not available as a preset. Annotation
                          will not be included.
                        errors: ''
                        sparv_output: "The exported files can be found in the following\
                          \ locations:\n ‚Ä¢ export/sbx_strix.config/\n ‚Ä¢ export/xml_export.pretty/\n\
                          \nJob execution finished but 1 warning occurred. See log\
                          \ messages above or logs/2023-09-11_11.12.28.686629.log\
                          \ for details."
                        last_run_started: '2023-09-11T11:12:28+02:00'
                        last_run_ended: '2023-09-11T11:13:07.290000+02:00'
                        progress: 100%
                      return_code: job_completed
                    - status: success
                      message: Job was completed successfully!
                      resource:
                        id: mink-ezodmp4wxm
                        name:
                          swe: txt-korpus
                          eng: txt-korpus
                        type: corpus
                        source_files:
                        - name: text1.txt
                          type: text/plain
                          last_modified: '2023-05-15T10:40:44+02:00'
                          size: 825
                          path: text1.txt
                        - name: text2.txt
                          type: text/plain
                          last_modified: '2023-05-15T10:40:45+02:00'
                          size: 1169
                          path: text2.txt
                      job:
                        status:
                          sync2sparv: none
                          sync2storage: none
                          sparv: done
                          korp: none
                          strix: none
                        current_process: sparv
                        pid: null
                        started: '2023-06-19T11:24:52+02:00'
                        done: null
                        sparv_exports:
                        - xml_export:pretty
                        - csv_export:csv
                        - stats_export:sbx_freq_list
                        current_files: []
                        install_scrambled: false
                        installed_korp: true
                        installed_strix: false
                        latest_seconds_taken: 10.353667
                        priority: ''
                        warnings: ''
                        errors: ''
                        sparv_output: Nothing to be done.
                        last_run_started: '2023-06-19T11:24:52+02:00'
                        last_run_ended: ''
                        progress: 100%
                      return_code: job_completed
                    - status: success
                      message: Job was completed successfully!
                      resource:
                        id: mink-dxh6e6wtff
                        name:
                          swe: Annes och Martins testkorpus
                          eng: ''
                        type: corpus
                        source_files:
                        - name: dokument2.xml
                          type: text/xml
                          last_modified: '2022-12-22T11:25:25+01:00'
                          size: 115
                          path: dokument2.xml
                        - name: dokument3.xml
                          type: text/xml
                          last_modified: '2023-06-13T13:26:44+02:00'
                          size: 41
                          path: dokument3.xml
                        - name: dokument4.xml
                          type: text/xml
                          last_modified: '2023-06-13T13:26:44+02:00'
                          size: 461
                          path: dokument4.xml
                        - name: dokument1.xml
                          type: text/xml
                          last_modified: '2023-06-13T13:26:49+02:00'
                          size: 1394
                          path: dokument1.xml
                      job:
                        status:
                          sync2sparv: none
                          sync2storage: none
                          sparv: done
                          korp: aborted
                          strix: done
                        current_process: sparv
                        pid: null
                        started: '2023-12-11T13:24:09+01:00'
                        done: null
                        sparv_exports:
                        - xml_export:pretty
                        - csv_export:csv
                        - stats_export:sbx_freq_list
                        current_files: []
                        install_scrambled: true
                        installed_korp: true
                        installed_strix: true
                        latest_seconds_taken: 20.379222
                        priority: ''
                        warnings: ''
                        errors: ''
                        sparv_output: "The exported files can be found in the following\
                          \ locations:\n ‚Ä¢ export/csv_export/\n ‚Ä¢ export/stats_export.frequency_list_sbx/\n\
                          \ ‚Ä¢ export/xml_export.pretty/"
                        last_run_started: '2023-12-11T13:24:09+01:00'
                        last_run_ended: ''
                        progress: 100%
                      return_code: job_completed
                  return_code:
                    type: string
                    example: listing_jobs
              example:
                status: success
                message: Listing resource infos
                resources: *id008
                return_code: listing_jobs
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
      deprecated: false
  /abort-job:
    post:
      tags:
      - Process Corpus
      summary: abort job
      description: 'Attempts to abort a running Sparv job.


        ### Example


        ```.bash

        curl -X POST ''{{host}}/abort-job?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT''

        ```'
      operationId: abortjob
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Successfully aborted job for 'mink-dxh6e6wtff'
                  job_status:
                    type: object
                    example: &id009
                      sync2sparv: none
                      sync2storage: none
                      sparv: aborted
                      korp: none
                  return_code:
                    type: string
                    example: aborted_job
              example:
                status: success
                message: Successfully aborted job for 'mink-dxh6e6wtff'
                job_status: *id009
                return_code: aborted_job
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to abort job for 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: failed_aborting_job
              example:
                status: error
                message: Failed to abort job for 'mink-dxh6e6wtff'
                return_code: failed_aborting_job
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Cannot abort job while syncing files
                  return_code:
                    type: string
                    example: failed_aborting_job_syncing
              example:
                status: error
                message: Cannot abort job while syncing files
                return_code: failed_aborting_job_syncing
      deprecated: false
  /clear-annotations:
    delete:
      tags:
      - Process Corpus
      summary: clear annotations
      description: 'Clears the annotation and export directory for the provided corpus
        on the Sparv server. This is useful if you want to process a previously annotated
        corpus with a new corpus config file.


        ### Example


        ```.bash

        curl -X DELETE ''{{host}}/clear-annotations?corpus_id=some_corpus_name'' -H
        ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: clearannotations
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Annotations for 'mink-dxh6e6wtff' successfully removed
                  sparv_output:
                    type: string
                    example: '''export'' directory removed, ''logs'' directory removed,
                      ''sparv-workdir'' directory removed'
                  return_code:
                    type: string
                    example: removed_annotations
              example:
                status: success
                message: Annotations for 'mink-dxh6e6wtff' successfully removed
                sparv_output: '''export'' directory removed, ''logs'' directory removed,
                  ''sparv-workdir'' directory removed'
                return_code: removed_annotations
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to clear annotations
                  return_code:
                    type: string
                    example: failed_clearing_annotations
              example:
                status: error
                message: Failed to clear annotations
                return_code: failed_clearing_annotations
      deprecated: false
  /check-changes:
    get:
      tags:
      - Process Corpus
      summary: check changes
      description: "Checks if any source files were changed, added or deleted since\
        \ the last Sparv run. Also checks if the config file was modified. \n\n###\
        \ Example\n\n```.bash\ncurl -X GET '{{host}}/check-changes?corpus_id=some_corpus_name'\
        \ -H 'Authorization: Bearer YOUR_JWT'\n```"
      operationId: checkchanges
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Your input for the corpus 'mink-dxh6e6wtff' has changed
                      since the last run
                  config_changed:
                    type: integer
                    example: true
                  sources_added:
                    type: integer
                    example: true
                  sources_changed:
                    type: integer
                    example: true
                  sources_deleted:
                    type: integer
                    example: true
                  changed_config:
                    type: object
                    example: &id010
                      name: config.yaml
                      type: application/yaml
                      last_modified: '2021-11-25T15:52:17+00:00'
                      size: 848
                      path: config.yaml
                  added_sources:
                    type: array
                    example: &id011
                    - name: dokument4.xml
                      type: application/xml
                      last_modified: '2021-11-29T14:35:30+00:00'
                      size: 461
                      path: dokument4.xml
                  changed_sources:
                    type: array
                    example: &id012
                    - name: dokument1.xml
                      type: application/xml
                      last_modified: '2021-11-25T15:56:51+00:00'
                      size: 1396
                      path: dokument1.xml
                    - name: dokument2.xml
                      type: application/xml
                      last_modified: '2021-11-25T15:56:51+00:00'
                      size: 115
                      path: dokument2.xml
                  deleted_sources:
                    type: array
                    example: &id013
                    - name: dokument3.xml
                      type: application/xml
                      last_modified: '2021-11-29T14:22:54+00:00'
                      size: 41
                      path: dokument3.xml
                  last_run_started:
                    type: string
                    example: '2021-11-19T14:16:10+00:00'
                  return_code:
                    type: string
                    example: input_changed
              example:
                status: success
                message: Your input for the corpus 'mink-dxh6e6wtff' has changed since
                  the last run
                config_changed: true
                sources_added: true
                sources_changed: true
                sources_deleted: true
                changed_config: *id010
                added_sources: *id011
                changed_sources: *id012
                deleted_sources: *id013
                last_run_started: '2021-11-19T14:16:10+00:00'
                return_code: input_changed
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Failed to check changes for corpus 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: failed_checking_changes
              example:
                status: success
                message: Failed to check changes for corpus 'mink-dxh6e6wtff'
                return_code: failed_checking_changes
      deprecated: false
  /install-korp:
    put:
      tags:
      - Process Corpus
      summary: install in Korp
      description: 'Adds an installation job to the queue to tries to install the
        corpus on Korp. The corpus may be sentence scrambled by setting the `scramble`
        parameter to `true` (the original order will be kept by default.


        There can only be one active job (annotation or installation) for each corpus
        at a time. A job must finish or be aborted before a new one can be started.


        ### Example


        ```.bash

        curl -X PUT -F "corpus_id=some_corpus_name" -F "scrambled=true" ''{{host}}/install-corpus''
        -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: installinKorp
      parameters:
      - name: corpus_id
        in: query
        required: true
        style: form
        schema:
          type: string
          example: mink-dxh6e6wtff
      - name: scramble
        in: query
        required: false
        style: form
        schema:
          type: string
          example: 'true'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Job has been queued
                  resource:
                    type: object
                    example: &id014
                      id: mink-dxh6e6wtff
                      public_id: mink-dxh6e6wtff
                      name:
                        swe: Annes och Martins testkorpus
                        eng: ''
                      type: corpus
                      source_files:
                      - name: dokument2.xml
                        type: text/xml
                        last_modified: '2022-12-22T11:25:25+01:00'
                        size: 115
                        path: dokument2.xml
                      - name: dokument3.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:44+02:00'
                        size: 41
                        path: dokument3.xml
                      - name: dokument4.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:44+02:00'
                        size: 461
                        path: dokument4.xml
                      - name: dokument1.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:49+02:00'
                        size: 1394
                        path: dokument1.xml
                  job:
                    type: object
                    example: &id015
                      status:
                        sync2sparv: none
                        sync2storage: none
                        sparv: done
                        korp: waiting
                        strix: done
                      current_process: korp
                      pid: null
                      started: '2023-12-11T13:24:09+01:00'
                      done: null
                      sparv_exports:
                      - xml_export:pretty
                      - csv_export:csv
                      - stats_export:sbx_freq_list
                      current_files: []
                      install_scrambled: true
                      installed_korp: false
                      installed_strix: false
                      latest_seconds_taken: 0
                      priority: 1
                      warnings: ''
                      errors: ''
                      sparv_output: ''
                      last_run_started: '2023-12-11T13:24:09+01:00'
                      last_run_ended: ''
                      progress: 0%
                  return_code:
                    type: string
                    example: job_queued
              example:
                status: success
                message: Job has been queued
                resource: *id014
                job: *id015
                return_code: job_queued
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to remove export files from Sparv server for corpus
                      'mink-dxh6e6wtff'. Cannot run Sparv safely
                  return_code:
                    type: string
                    example: failed_removing_exports
              example:
                status: error
                message: Failed to remove export files from Sparv server for corpus
                  'mink-dxh6e6wtff'. Cannot run Sparv safely
                return_code: failed_removing_exports
      deprecated: false
  /install-strix:
    put:
      tags:
      - Process Corpus
      summary: install in Strix
      description: 'Adds an installation job to the queue to tries to install the
        corpus on Korp. The corpus may be sentence scrambled by setting the `scramble`
        parameter to `true` (the original order will be kept by default.


        There can only be one active job (annotation or installation) for each corpus
        at a time. A job must finish or be aborted before a new one can be started.


        ### Example


        ```.bash

        curl -X PUT -F "corpus_id=some_corpus_name" -F "scrambled=true" ''{{host}}/install-corpus''
        -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: installinStrix
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Job has been queued
                  resource:
                    type: object
                    example: &id016
                      id: mink-dxh6e6wtff
                      public_id: mink-dxh6e6wtff
                      name:
                        swe: Annes och Martins testkorpus
                        eng: ''
                      type: corpus
                      source_files:
                      - name: dokument2.xml
                        type: text/xml
                        last_modified: '2022-12-22T11:25:25+01:00'
                        size: 115
                        path: dokument2.xml
                      - name: dokument3.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:44+02:00'
                        size: 41
                        path: dokument3.xml
                      - name: dokument4.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:44+02:00'
                        size: 461
                        path: dokument4.xml
                      - name: dokument1.xml
                        type: text/xml
                        last_modified: '2023-06-13T13:26:49+02:00'
                        size: 1394
                        path: dokument1.xml
                  job:
                    type: object
                    example: &id017
                      status:
                        sync2sparv: none
                        sync2storage: none
                        sparv: done
                        korp: done
                        strix: waiting
                      current_process: strix
                      pid: null
                      started: '2023-12-11T13:24:09+01:00'
                      done: null
                      sparv_exports:
                      - xml_export:pretty
                      - csv_export:csv
                      - stats_export:sbx_freq_list
                      current_files: []
                      install_scrambled: true
                      installed_korp: true
                      installed_strix: false
                      latest_seconds_taken: 0
                      priority: 1
                      warnings: ''
                      errors: ''
                      sparv_output: ''
                      last_run_started: '2023-12-11T13:24:09+01:00'
                      last_run_ended: ''
                      progress: 0%
                  return_code:
                    type: string
                    example: job_queued
              example:
                status: success
                message: Job has been queued
                resource: *id016
                job: *id017
                return_code: job_queued
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to remove export files from Sparv server for corpus
                      'mink-dxh6e6wtff'. Cannot run Sparv safely
                  return_code:
                    type: string
                    example: failed_removing_exports
              example:
                status: error
                message: Failed to remove export files from Sparv server for corpus
                  'mink-dxh6e6wtff'. Cannot run Sparv safely
                return_code: failed_removing_exports
      deprecated: false
  /list-exports:
    get:
      tags:
      - Manage Exports
      summary: list exports
      description: 'Lists the available export files created by Sparv.


        ### Example


        ```.bash

        curl -X GET ''{{host}}/list-exports?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT''

        ```'
      operationId: listexports
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Current export files for 'mink-dxh6e6wtff'
                  contents:
                    type: array
                    example: &id018
                    - name: dokument2.csv
                      type: text/csv
                      last_modified: '2022-06-10T17:54:15+02:00'
                      size: 538
                      path: csv_export/dokument2.csv
                    - name: dokument1.csv
                      type: text/csv
                      last_modified: '2022-06-10T17:55:37+02:00'
                      size: 4876
                      path: csv_export/dokument1.csv
                    - name: stats_mink-dxh6e6wtff.csv
                      type: text/csv
                      last_modified: '2022-06-10T17:55:39+02:00'
                      size: 10838
                      path: stats_export.frequency_list/stats_mink-dxh6e6wtff.csv
                    - name: dokument2_export.xml
                      type: application/xml
                      last_modified: '2022-06-10T17:55:37+02:00'
                      size: 1497
                      path: xml_export.pretty/dokument2_export.xml
                    - name: dokument1_export.xml
                      type: application/xml
                      last_modified: '2022-06-10T17:55:38+02:00'
                      size: 13429
                      path: xml_export.pretty/dokument1_export.xml
                  return_code:
                    type: string
                    example: listing_exports
              example:
                status: success
                message: Current export files for 'mink-dxh6e6wtff'
                contents: *id018
                return_code: listing_exports
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to list export files in 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: failed_listing_exports
              example:
                status: error
                message: Failed to list export files in 'mink-dxh6e6wtff'
                return_code: failed_listing_exports
      deprecated: false
  /download-exports:
    get:
      tags:
      - Manage Exports
      summary: download exports
      description: 'Downloads all available export files created by Sparv.


        The parameters `file` and `dir` may be used to download a specific export
        file or a directory of export files. These parameters must be supplied as
        paths relative to the export directory. Only one of these parameters may be
        applied at a time.


        The `zip` parameter may be set to `false` in combination the the `file` parameter
        to avoid zipping the file to be downloaded. If `zip` is used without the `file`
        parameter it will have no effect.


        ### Examples


        ```.bash

        curl -X GET ''{{host}}/download-exports?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT'' --output some_corpus_name.zip

        ```


        ```.bash

        curl -X GET ''{{host}}/download-exports?corpus_id=some_corpus_name&file=csv/dokument1.csv&zip=false''
        -H ''Authorization: Bearer YOUR_JWT'' --output dokument1.csv

        ```'
      operationId: downloadexports
      parameters:
      - name: corpus_id
        in: query
        required: true
        style: form
        schema:
          type: string
          example: mink-dxh6e6wtff
      - *id019
      - name: file
        in: query
        required: false
        style: form
        schema:
          type: string
          example: csv/dokument2.csv
      - name: dir
        in: query
        required: false
        style: form
        schema:
          type: string
          example: csv
      responses:
        '200':
          description: OK
          content:
            application/zip:
              schema:
                type: string
                example: "PK\x03\x04\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\a\0\
                  \0\0export/PK\x03\x04\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\v\
                  \0\0\0export/csv/PK\x03\x04\n\0\b\0\0\0ÔøΩjZR\0\0\0\0\0\0\0\0\0\0\0\
                  \0\x18\0\0\0export/csv/dokument1.csvtoken\tbaseform\tpos\tsentiment_label\n\
                  # text.date = 2020-03-11\n# text.author = Sparvutvecklare\n# text.id\
                  \ = 1\n# sentence.id = b1ac\nHej\t|hej|\tIN\t\n!\t|\tMAD\t\n\n#\
                  \ sentence.id = b142\nDet\t|den|den h√§r|\tPN\t\nh√§r\t|h√§r|den h√§r:1|\t\
                  AB\t\n√§r\t|vara|\tVB\tneutral\nen\t|en|\tDT\t\nkorpus\t|korpus|\t\
                  NN\t\n.\t|\tMAD\t\n\n# sentence.id = b196\n# ne.ex = ENAMEX\n# ne.name\
                  \ = Astrid Lindgren\n# ne.subtype = HUM\n# ne.type = PRS\nAstrid\t\
                  |Astrid|\tPM\t\nLindgren\t|Lindgren|\tPM\t\n√§r\t|vara|\tVB\tneutral\n\
                  f√∂dd\t|f√∂da|f√∂dd|\tPC\tneutral\ni\t|i|\tPP\t\n# ne.ex = ENAMEX\n\
                  # ne.name = Vimmerby\n# ne.subtype = PPL\n# ne.type = LOC\nVimmerby\t\
                  |Vimmerby|\tPM\t\n# ne.ex = TIMEX\n# ne.name = 1907\n# ne.subtype\
                  \ = DAT\n# ne.type = TME\n1907\t|\tRG\t\n.\t|\tMAD\t\n\n# sentence.id\
                  \ = b175\nOch\t|och|\tKN\t\nh√§r\t|h√§r|\tAB\t\nkommer\t|komma|\t\
                  VB\tneutral\nden\t|den|en|\tDT\t\ntredje\t|\tRO\t\nmeningen\t|mening|\t\
                  NN\tneutral\ni\t|i|\tPP\t\nett\t|en|\tDT\t\nnytt\t|ny|\tJJ\tneutral\n\
                  stycke\t|stycke|\tNN\tneutral\n.\t|\tMAD\t\n\n# sentence.id = b16a\n\
                  Sista\t|sista|\tJJ\tneutral\nmeningen\t|mening|\tNN\tneutral\n√§r\t\
                  |vara|\tVB\tneutral\nkort\t|kort|\tJJ\tneutral\noch\t|och|\tKN\t\
                  \ninneh√•ller\t|inneh√•lla|\tVB\tneutral\nen\t|en|\tDT\t\nsammans√§ttningsform\t\
                  |\tNN\t\n:\t|\tMID\t\nf√∂delsedagskalas\t|f√∂delsedagskalas|\tNN\t\
                  \n.\t|\tMAD\t\n\n# text.date = 2020-03-16\n# text.author = Wikipedia\n\
                  # text.id = 2\n# sentence.id = b110\nSpr√•kbanken\t|spr√•kbank|\t\
                  NN\t\n√§r\t|vara|\tVB\tneutral\nen\t|en|\tDT\t\nforskningsenhet\t\
                  |\tNN\t\nvid\t|vid|\tPP\t\n# ne.ex = ENAMEX\n# ne.name = G√∂teborgs\
                  \ universitet\n# ne.subtype = EDU\n# ne.type = ORG\nG√∂teborgs\t\
                  |G√∂teborg|G√∂teborgs universitet|\tPM\t\nuniversitet\t|universitet|G√∂teborgs\
                  \ universitet:6|\tNN\t\n.\t|\tMAD\t\n\n# sentence.id = b122\nDen\t\
                  |den|\tPN\t\ninr√§ttades\t|inr√§tta|\tVB\tneutral\nsom\t|\tKN\t\n\
                  en\t|en|\tDT\t\nnationell\t|nationell|\tJJ\tneutral\nresurs\t|resurs|\t\
                  NN\tpositive\n1975\t|\tRG\t\n,\t|\tMID\t\nsom\t|\tKN\t\nett\t|en|\t\
                  DT\t\ndirekt\t|direkt|\tJJ\tneutral\nresultat\t|resultat|\tNN\t\
                  neutral\nav\t|av|\tPP\t\n# ne.ex = ENAMEX\n# ne.name = Sture All√©ns\n\
                  # ne.subtype = HUM\n# ne.type = PRS\nSture\t|Sture|\tPM\t\nAll√©ns\t\
                  |\tPM\t\npionj√§rinsatser\t|\tNN\t\ninom\t|inom|\tPP\t\nsvensk\t\
                  |svensk|\tJJ\tneutral\nkorpuslingvistik\t|korpuslingvistik|\tNN\t\
                  \n# ne.ex = TIMEX\n# ne.name = under 1960-talet\n# ne.subtype =\
                  \ DAT\n# ne.type = TME\nunder\t|under|\tPP\t\n1960-talet\t|1960-tal|\t\
                  NN\t\n.\t|\tMAD\t\n\n# sentence.id = b1c1\nSpr√•kbankens\t|spr√•kbank|\t\
                  NN\t\nuppdrag\t|uppdrag|\tNN\tneutral\nblev\t|bli|\tVB\tneutral\n\
                  och\t|och|\tKN\t\n√§r\t|vara|\tVB\tneutral\nfortfarande\t|fortfarande|\t\
                  AB\t\natt\t|att|\tIE\t\nsamla\t|samla|\tVB\tneutral\nin\t|in|\t\
                  PL\t\n,\t|\tMID\t\nf√∂r√§dla\t|f√∂r√§dla|\tVB\t\noch\t|och|\tKN\t\n\
                  tillg√§ngligg√∂ra\t|tillg√§ngligg√∂ra|\tVB\t\nspr√•kresurser\t|spr√•kresurs|\t\
                  NN\t\n√•t\t|√•t|\tPP\t\nforskare\t|forskare|\tNN\tneutral\noch\t|och|\t\
                  KN\t\nallm√§nheten\t|allm√§nhet|\tNN\tneutral\n,\t|\tMID\t\noch\t\
                  |och|\tKN\t\natt\t|att|\tIE\t\nbedriva\t|bedriva|\tVB\tneutral\n\
                  forskning\t|forskning|\tNN\tneutral\noch\t|och|\tKN\t\nutveckling\t\
                  |utveckling|\tNN\tneutral\nsom\t|\tHP\t\nfr√§mjar\t|fr√§mja|\tVB\t\
                  positive\ns√•n\t|s√•n|\tJJ\t\nanv√§ndning\t|anv√§ndning|\tNN\tneutral\n\
                  .\t|\tMAD\t\n\n# sentence.id = b1cd\nI\t|i|\tPP\t\nSpr√•kbanken\t\
                  |Spr√•kbanken|\tPM\t\nfinns\t|finna|finnas|\tVB\tneutral\nen\t|en|\t\
                  DT\t\nunik\t|unik|\tJJ\tneutral\nkompetens\t|kompetens|\tNN\tpositive\n\
                  vad\t|vad|vad f√∂r|\tHP\t\ng√§ller\t|g√§lla|\tVB\tneutral\nsvenska\t\
                  |svensk|\tJJ\tneutral\ntextkorpusar\t|textkorpus|\tNN\t\n,\t|\t\
                  MID\t\nparallellkorpusar\t|\tNN\t\n,\t|\tMID\t\nsvenska\t|svensk|\t\
                  JJ\tneutral\nelektroniska\t|elektronisk|\tJJ\tneutral\nlexikonresurser\t\
                  |lexikonresurs|\tNN\t\nsamt\t|samt|\tKN\t\nspr√•kteknologiska\t|\t\
                  JJ\t\nverktyg\t|verktyg|\tNN\t\nf√∂r\t|f√∂r|vad f√∂r:7|\tPP\t\natt\t\
                  |att|\tIE\t\nbearbeta\t|bearbeta|\tVB\t\n,\t|\tMID\t\nannotera\t\
                  |annotera|\tVB\t\noch\t|och|\tKN\t\nvisa\t|visa|visa upp|\tVB\t\
                  neutral\nupp\t|upp|visa upp:26|\tPL\t\ntextkorpusar\t|textkorpus|\t\
                  NN\t\n.\t|\tMAD\t\n\n# sentence.id = b15f\nHuvuddelen\t|huvuddel|\t\
                  NN\t\nav\t|av|\tPP\t\nmaterialet\t|material|\tNN\tneutral\n√§r\t\
                  |vara|\tVB\tneutral\nmodernt\t|modern|\tJJ\tpositive\n,\t|\tMID\t\
                  \nmen\t|men|\tKN\t\nambitionen\t|ambition|\tNN\tneutral\n√§r\t|vara|\t\
                  VB\tneutral\natt\t|att|\tSN\t\nresurserna\t|resurs|\tNN\tpositive\n\
                  ska\t|skola|\tVB\tneutral\navspegla\t|avspegla|\tVB\t\nhela\t|hel|\t\
                  JJ\tneutral\nden\t|den|en|\tDT\t\nskrivna\t|skriva|\tPC\tneutral\n\
                  svenskans\t|svenska|\tNN\tneutral\nhistoria\t|historia|\tNN\tneutral\n\
                  -\t|\tMID\t\nfr√•n\t|fr√•n|\tPP\t\nmedeltida\t|medeltida|\tJJ\t\n\
                  fornsvenska\t|\tNN\t\ntill\t|till|\tPP\t\nmodern\t|modern|\tJJ\t\
                  positive\nsvenska\t|svenska|\tNN\tneutral\n-\t|\tMID\t\nmed\t|med|\t\
                  PP\t\nalla\t|all|\tDT\t\ndess\t|den|\tPS\t\ngenrer\t|genre|\tNN\t\
                  \n.\t|\tMAD\t\n\n# sentence.id = b13b\nHuvuddelen\t|huvuddel|\t\
                  NN\t\nav\t|av|\tPP\t\nresurserna\t|resurs|\tNN\tpositive\n,\t|\t\
                  MID\t\nkorpusar\t|korpus|\tNN\t\noch\t|och|\tKN\t\nlexikon\t|lexikon|\t\
                  NN\t\n,\t|\tMID\t\n√§r\t|vara|\tVB\tneutral\nfritt\t|fri|\tAB\tpositive\n\
                  √•tkomliga\t|√•tkomlig|\tJJ\t\nf√∂r\t|f√∂r|\tPP\t\ns√∂kning\t|s√∂kning|\t\
                  NN\t\nvia\t|via|\tPP\t\nwebbgr√§nssnitt\t|\tNN\t\n.\t|\tMAD\t\n\n\
                  # text.date = \n# text.author = \n# text.id = 1\n# sentence.id =\
                  \ b100\nHej\t|hej|\tIN\t\np√•\t|p√•|\tPP\t\ndig\t|du|\tPN\t\n.\t|\t\
                  MAD\t\n\n# sentence.id = b1f4\nKan\t|kunna|\tVB\tneutral\nvi\t|vi|\t\
                  PN\t\nhantera\t|hantera|\tVB\tneutral\n√∂verlappande\t|√∂verlappa|\t\
                  PC\t\ntaggar\t|tagg|\tNN\t\n?\t|\tMAD\t\nPK\a\bYÔøΩ\"ÔøΩÔøΩ\x12\0\0ÔøΩ\x12\
                  \0\0PK\x03\x04\n\0\b\0\0\0ÔøΩkZR\0\0\0\0\0\0\0\0\0\0\0\0\x18\0\0\0\
                  export/csv/dokument2.csvtoken\tbaseform\tpos\tsentiment_label\n\
                  # text\n# sentence.id = e00a\nHej\t|hej|\tIN\t\n!\t|\tMAD\t\n\n\
                  # sentence.id = e089\nDet\t|den|den h√§r|\tPN\t\nh√§r\t|h√§r|den h√§r:1|\t\
                  AB\t\n√§r\t|vara|\tVB\tneutral\nen\t|en|en annan|\tDT\t\nannan\t\
                  |annan|en annan:4|\tJJ\t\ntext\t|text|\tNN\tneutral\n.\t|\tMAD\t\
                  \n\n# sentence.id = e0b6\nDen\t|den|\tPN\t\n√§r\t|vara|\tVB\tneutral\n\
                  j√§ttekort\t|\tJJ\t\n.\t|\tMAD\t\n\n# sentence.id = e0be\nDen\t|den|\t\
                  PN\t\nhar\t|ha|\tVB\tneutral\nbara\t|bara|\tAB\t\ntre\t|tre|\tRG\t\
                  \nmeningar\t|mening|\tNN\tneutral\noch\t|och|\tKN\t\ningen\t|ingen|\t\
                  DT\t\nmetadata\t|metadata|\tNN\t\n.\t|\tMAD\t\nPK\a\bÔøΩ7√æ\x0E\x02\
                  \0\0\x0E\x02\0\0PK\x03\x04\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\
                  \0\0\x16\0\0\0export/frequency_list/PK\x03\x04\n\0\b\0\0\0ÔøΩkZR\0\
                  \0\0\0\0\0\0\0\0\0\0\0(\0\0\0export/frequency_list/stats_mini-swe.csvtoken\t\
                  POS\tlemma\tSALDO sense\tlemgram\tcompound\tcount\r\n.\tMAD\t\t\t\
                  \t\t14\r\n√§r\tVB.PRS.AKT\tvara\tvara..1\tvara..vb.1\t\t10\r\noch\t\
                  KN\toch\toch..1\toch..kn.1\t\t9\r\n,\tMID\t\t\t\t\t9\r\nen\tDT.UTR.SIN.IND\t\
                  en\tden..1\ten..al.1\t\t6\r\nHej\tIN\thej\thej..1\thej..in.1\t\t\
                  3\r\nDen\tPN.UTR.SIN.DEF.SUB+OBJ\tden\tden..2\tden..pn.1\t\t3\r\n\
                  av\tPP\tav\tav..1\tav..pp.1\t\t3\r\natt\tIE\tatt\tatt..1\tatt..sn.1\t\
                  \t3\r\n!\tMAD\t\t\t\t\t2\r\nDet\tPN.NEU.SIN.DEF.SUB+OBJ\tden\tden..2\t\
                  den..pn.1\t\t2\r\nh√§r\tAB\th√§r\tden_h√§r..1\th√§r..ab.1\t\t2\r\ni\t\
                  PP\ti\ti..2\ti..pp.1\t\t2\r\nden\tDT.UTR.SIN.DEF\tden\tden..1\t\
                  den..pn.1\t\t2\r\nmeningen\tNN.UTR.SIN.DEF.NOM\tmening\tmening..1\t\
                  mening..nn.1\t\t2\r\nett\tDT.NEU.SIN.IND\ten\tden..1\ten..al.1\t\
                  \t2\r\nsom\tKN\t\t\t\t\t2\r\nsvenska\tJJ.POS.UTR+NEU.PLU.IND+DEF.NOM\t\
                  svensk\tsvensk..1\tsvensk..av.1\t\t2\r\ntextkorpusar\tNN.UTR.PLU.IND.NOM\t\
                  textkorpus\ttextkorpus..1\ttextkorpus..nn.1\t\t2\r\nf√∂r\tPP\tf√∂r\t\
                  f√∂r..1\tf√∂r..pp.1\t\t2\r\nHuvuddelen\tNN.UTR.SIN.DEF.NOM\thuvuddel\t\
                  huvuddel..1\thuvuddel..nn.1\t\t2\r\nresurserna\tNN.UTR.PLU.DEF.NOM\t\
                  resurs\tresurs..1\tresurs..nn.1\t\t2\r\n-\tMID\t\t\t\t\t2\r\nkorpus\t\
                  NN.UTR.SIN.IND.NOM\tkorpus\tkorpus..1\tkorpus..nn.1\t\t1\r\nAstrid\t\
                  PM.NOM\tAstrid\tAstrid..1\tAstrid..pm.1\t\t1\r\nLindgren\tPM.NOM\t\
                  Lindgren\tLindgren..1\tLindgren..pm.1\t\t1\r\nf√∂dd\tPC.PRF.UTR.SIN.IND.NOM\t\
                  f√∂da\tf√∂dd..1\tf√∂da..vb.1\t\t1\r\nVimmerby\tPM.NOM\tVimmerby\tVimmerby..1\t\
                  Vimmerby..pm.1\t\t1\r\n1907\tRG.NOM\t\t\t\t\t1\r\nOch\tKN\toch\t\
                  och..1\toch..kn.1\t\t1\r\nh√§r\tAB\th√§r\th√§r..1\th√§r..ab.1\t\t1\r\
                  \nkommer\tVB.PRS.AKT\tkomma\tkomma..1\tkomma..vb.1\t\t1\r\ntredje\t\
                  RO.NOM\t\t\t\t\t1\r\nnytt\tJJ.POS.NEU.SIN.IND.NOM\tny\tny..1\tny..av.1\t\
                  \t1\r\nstycke\tNN.NEU.SIN.IND.NOM\tstycke\tstycke..1\tstycke..nn.1\t\
                  \t1\r\nSista\tJJ.SUV.UTR+NEU.SIN+PLU.DEF.NOM\tsista\tsista..1\t\
                  sista..av.1\t\t1\r\nkort\tJJ.POS.UTR.SIN.IND.NOM\tkort\tkort..1\t\
                  kort..av.1\t\t1\r\ninneh√•ller\tVB.PRS.AKT\tinneh√•lla\tinneh√•lla..1\t\
                  inneh√•lla..vb.1\t\t1\r\nsammans√§ttningsform\tNN.UTR.SIN.IND.NOM\t\
                  \t\t\tsammans√§ttning..nn.1+form..nn.1\t1\r\n:\tMID\t\t\t\t\t1\r\n\
                  f√∂delsedagskalas\tNN.NEU.SIN.IND.NOM\tf√∂delsedagskalas\tf√∂delsedagskalas..1\t\
                  f√∂delsedagskalas..nn.1\t\t1\r\nSpr√•kbanken\tNN.UTR.SIN.DEF.NOM\t\
                  spr√•kbank\tspr√•kbank..1\tspr√•kbank..nn.1\t\t1\r\nforskningsenhet\t\
                  NN.UTR.SIN.IND.NOM\t\t\t\tforskning..nn.1+enhet..nn.1\t1\r\nvid\t\
                  PP\tvid\tvid..1\tvid..pp.1\t\t1\r\nG√∂teborgs\tPM.GEN\tG√∂teborg\t\
                  G√∂teborg..1\tG√∂teborg..pm.1\t\t1\r\nuniversitet\tNN.NEU.SIN.IND.NOM\t\
                  universitet\tG√∂teborgs_universitet..1\tuniversitet..nn.1\t\t1\r\n\
                  inr√§ttades\tVB.PRT.SFO\tinr√§tta\tinr√§tta..1\tinr√§tta..vb.1\t\t1\r\
                  \nnationell\tJJ.POS.UTR.SIN.IND.NOM\tnationell\tnationell..1\tnationell..av.1\t\
                  \t1\r\nresurs\tNN.UTR.SIN.IND.NOM\tresurs\tresurs..1\tresurs..nn.1\t\
                  \t1\r\n1975\tRG.NOM\t\t\t\t\t1\r\ndirekt\tJJ.POS.NEU.SIN.IND.NOM\t\
                  direkt\tdirekt..1\tdirekt..av.1\t\t1\r\nresultat\tNN.NEU.SIN.IND.NOM\t\
                  resultat\tresultat..1\tresultat..nn.1\t\t1\r\nSture\tPM.NOM\tSture\t\
                  Sture..1\tSture..pm.1\t\t1\r\nAll√©ns\tPM.GEN\t\t\t\t\t1\r\npionj√§rinsatser\t\
                  NN.UTR.PLU.IND.NOM\t\t\t\tpionj√§r..nn.1+insats..nn.1\t1\r\ninom\t\
                  PP\tinom\tinom..1\tinom..pp.1\t\t1\r\nsvensk\tJJ.POS.UTR.SIN.IND.NOM\t\
                  svensk\tsvensk..1\tsvensk..av.1\t\t1\r\nkorpuslingvistik\tNN.UTR.SIN.IND.NOM\t\
                  korpuslingvistik\tkorpuslingvistik..1\tkorpuslingvistik..nn.1\t\t\
                  1\r\nunder\tPP\tunder\tunder..1\tunder..pp.1\t\t1\r\n1960-talet\t\
                  NN.NEU.SIN.DEF.NOM\t1960-tal\tnittonhundrasextiotalet..1\t_1960-tal..nn.1\t\
                  \t1\r\nSpr√•kbankens\tNN.UTR.SIN.DEF.GEN\tspr√•kbank\tspr√•kbank..1\t\
                  spr√•kbank..nn.1\t\t1\r\nuppdrag\tNN.NEU.SIN.IND.NOM\tuppdrag\tuppdrag..1\t\
                  uppdrag..nn.1\t\t1\r\nblev\tVB.PRT.AKT\tbli\tbli..1\tbli..vb.1\t\
                  \t1\r\nfortfarande\tAB\tfortfarande\tfortfarande..1\tfortfarande..ab.1\t\
                  \t1\r\nsamla\tVB.INF.AKT\tsamla\tsamla..2\tsamla..vb.1\t\t1\r\n\
                  in\tPL\tin\tin..1\tin..ab.1\t\t1\r\nf√∂r√§dla\tVB.INF.AKT\tf√∂r√§dla\t\
                  f√∂r√§dla..1\tf√∂r√§dla..vb.1\t\t1\r\ntillg√§ngligg√∂ra\tVB.INF.AKT\t\
                  tillg√§ngligg√∂ra\ttillg√§ngligg√∂ra..1\ttillg√§ngligg√∂ra..vb.1\t\t1\r\
                  \nspr√•kresurser\tNN.UTR.PLU.IND.NOM\tspr√•kresurs\tspr√•kresurs..1\t\
                  spr√•kresurs..nn.1\t\t1\r\n√•t\tPP\t√•t\t√•t..1\t√•t..pp.1\t\t1\r\nforskare\t\
                  NN.UTR.PLU.IND.NOM\tforskare\tforskare..1\tforskare..nn.1\t\t1\r\
                  \nallm√§nheten\tNN.UTR.SIN.DEF.NOM\tallm√§nhet\tallm√§nhet..1\tallm√§nhet..nn.1\t\
                  \t1\r\nbedriva\tVB.INF.AKT\tbedriva\tbedriva..1\tbedriva..vb.1\t\
                  \t1\r\nforskning\tNN.UTR.SIN.IND.NOM\tforskning\tforskning..1\t\
                  forskning..nn.1\t\t1\r\nutveckling\tNN.UTR.SIN.IND.NOM\tutveckling\t\
                  utveckling..1\tutveckling..nn.1\t\t1\r\nsom\tHP.-.-.-\t\t\t\t\t\
                  1\r\nfr√§mjar\tVB.PRS.AKT\tfr√§mja\tfr√§mja..1\tfr√§mja..vb.1\t\t1\r\
                  \ns√•n\tJJ.POS.UTR.SIN.IND.NOM\ts√•n\ts√•dan..1\ts√•n..pn.1\t\t1\r\n\
                  anv√§ndning\tNN.UTR.SIN.IND.NOM\tanv√§ndning\tanv√§ndning..1\tanv√§ndning..nn.1\t\
                  \t1\r\nI\tPP\ti\ti..2\ti..pp.1\t\t1\r\nSpr√•kbanken\tPM.NOM\tSpr√•kbanken\t\
                  Spr√•kbanken..1\tSpr√•kbanken..pm.1\t\t1\r\nfinns\tVB.PRS.SFO\tfinna\t\
                  finna..1\tfinna..vb.1\t\t1\r\nunik\tJJ.POS.UTR.SIN.IND.NOM\tunik\t\
                  unik..1\tunik..av.1\t\t1\r\nkompetens\tNN.UTR.SIN.IND.NOM\tkompetens\t\
                  kompetens..1\tkompetens..nn.1\t\t1\r\nvad\tHP.NEU.SIN.IND\tvad\t\
                  vad..1\tvad..pn.1\t\t1\r\ng√§ller\tVB.PRS.AKT\tg√§lla\tg√§lla..1\t\
                  g√§lla..vb.1\t\t1\r\nparallellkorpusar\tNN.UTR.PLU.IND.NOM\t\t\t\t\
                  parallell..nn.1+korpus..nn.1\t1\r\nelektroniska\tJJ.POS.UTR+NEU.PLU.IND+DEF.NOM\t\
                  elektronisk\telektronisk..1\telektronisk..av.1\t\t1\r\nlexikonresurser\t\
                  NN.UTR.PLU.IND.NOM\tlexikonresurs\tlexikonresurs..1\tlexikonresurs..nn.1\t\
                  \t1\r\nsamt\tKN\tsamt\tsamt..1\tsamt..kn.1\t\t1\r\nspr√•kteknologiska\t\
                  JJ.POS.UTR+NEU.PLU.IND+DEF.NOM\t\t\t\tspr√•k..nn.1+teknologisk..av.1\t\
                  1\r\nverktyg\tNN.NEU.PLU.IND.NOM\tverktyg\tverktyg..1\tverktyg..nn.1\t\
                  \t1\r\nbearbeta\tVB.INF.AKT\tbearbeta\tbearbeta..1\tbearbeta..vb.1\t\
                  \t1\r\nannotera\tVB.INF.AKT\tannotera\tannotera..1\tannotera..vb.1\t\
                  \t1\r\nvisa\tVB.INF.AKT\tvisa\tvisa..1\tvisa..vb.1\t\t1\r\nupp\t\
                  PL\tupp\tupp..1\tupp..ab.1\t\t1\r\nmaterialet\tNN.NEU.SIN.DEF.NOM\t\
                  material\tmaterial..1\tmaterial..nn.1\t\t1\r\nmodernt\tJJ.POS.NEU.SIN.IND.NOM\t\
                  modern\tmodern..1\tmodern..av.1\t\t1\r\nmen\tKN\tmen\tmen..1\tmen..kn.1\t\
                  \t1\r\nambitionen\tNN.UTR.SIN.DEF.NOM\tambition\tambition..1\tambition..nn.1\t\
                  \t1\r\natt\tSN\tatt\tatt..1\tatt..sn.1\t\t1\r\nska\tVB.PRS.AKT\t\
                  skola\tskola..4\tskola..vb.2\t\t1\r\navspegla\tVB.INF.AKT\tavspegla\t\
                  avspegla..1\tavspegla..vb.1\t\t1\r\nhela\tJJ.POS.UTR+NEU.SIN.DEF.NOM\t\
                  hel\thel..1\thel..av.1\t\t1\r\nskrivna\tPC.PRF.UTR+NEU.SIN.DEF.NOM\t\
                  skriva\tskriva..1\tskriva..vb.1\t\t1\r\nsvenskans\tNN.UTR.SIN.DEF.GEN\t\
                  svenska\tsvenska..2\tsvenska..nn.1\t\t1\r\nhistoria\tNN.UTR.SIN.IND.NOM\t\
                  historia\thistoria..1\thistoria..nn.1\t\t1\r\nfr√•n\tPP\tfr√•n\tfr√•n..1\t\
                  fr√•n..pp.1\t\t1\r\nmedeltida\tJJ.POS.UTR+NEU.SIN+PLU.IND+DEF.NOM\t\
                  medeltida\tmedeltida..1\tmedeltida..av.1\t\t1\r\nfornsvenska\tNN.UTR.SIN.IND.NOM\t\
                  \t\t\tforn..av.1+svenska..nn.1\t1\r\ntill\tPP\ttill\ttill..1\ttill..pp.1\t\
                  \t1\r\nmodern\tJJ.POS.UTR.SIN.IND.NOM\tmodern\tmodern..1\tmodern..av.1\t\
                  \t1\r\nsvenska\tNN.UTR.SIN.IND.NOM\tsvenska\tsvenska..1\tsvenska..nn.1\t\
                  \t1\r\nmed\tPP\tmed\tmed..1\tmed..pp.1\t\t1\r\nalla\tDT.UTR+NEU.PLU.IND+DEF\t\
                  all\tall..1\tall..pn.1\t\t1\r\ndess\tPS.UTR+NEU.SIN+PLU.DEF\tden\t\
                  den..2\tden..pn.1\t\t1\r\ngenrer\tNN.UTR.PLU.IND.NOM\tgenre\tgenre..1\t\
                  genre..nn.1\t\t1\r\nkorpusar\tNN.UTR.PLU.IND.NOM\tkorpus\tkorpus..1\t\
                  korpus..nn.1\t\t1\r\nlexikon\tNN.NEU.PLU.IND.NOM\tlexikon\tlexikon..1\t\
                  lexikon..nn.1\t\t1\r\nfritt\tAB.POS\tfri\tfri..2\tfri..av.1\t\t\
                  1\r\n√•tkomliga\tJJ.POS.UTR+NEU.PLU.IND+DEF.NOM\t√•tkomlig\t√•tkomlig..1\t\
                  √•tkomlig..av.1\t\t1\r\ns√∂kning\tNN.UTR.SIN.IND.NOM\ts√∂kning\ts√∂kning..1\t\
                  s√∂kning..nn.1\t\t1\r\nvia\tPP\tvia\tvia..1\tvia..pp.1\t\t1\r\nwebbgr√§nssnitt\t\
                  NN.NEU.PLU.IND.NOM\t\t\t\twebb..nn.1+gr√§nssnitt..nn.1\t1\r\np√•\t\
                  PP\tp√•\tp√•..1\tp√•..pp.1\t\t1\r\ndig\tPN.UTR.SIN.DEF.OBJ\tdu\tdu..1\t\
                  du..pn.1\t\t1\r\nKan\tVB.PRS.AKT\tkunna\tkunna..1\tkunna..vb.1\t\
                  \t1\r\nvi\tPN.UTR.PLU.DEF.SUB\tvi\tvi..1\tvi..pn.1\t\t1\r\nhantera\t\
                  VB.INF.AKT\thantera\thantera..1\thantera..vb.1\t\t1\r\n√∂verlappande\t\
                  PC.PRS.UTR+NEU.SIN+PLU.IND+DEF.NOM\t√∂verlappa\t√∂verlappa..1\t√∂verlappa..vb.1\t\
                  \t1\r\ntaggar\tNN.UTR.PLU.IND.NOM\ttagg\ttagg..1\ttagg..nn.1\t\t\
                  1\r\n?\tMAD\t\t\t\t\t1\r\nannan\tJJ.POS.UTR.SIN.IND.NOM\tannan\t\
                  annan..1\tannan..pn.1\t\t1\r\ntext\tNN.UTR.SIN.IND.NOM\ttext\ttext..1\t\
                  text..nn.1\t\t1\r\nj√§ttekort\tJJ.POS.UTR.SIN.IND.NOM\t\t\t\tj√§tte..nn.1+kort..av.1\t\
                  1\r\nhar\tVB.PRS.AKT\tha\tha..1\tha..vb.1\t\t1\r\nbara\tAB\tbara\t\
                  bara..1\tbara..ab.1\t\t1\r\ntre\tRG.NOM\ttre\ttre..1\ttre..nl.1\t\
                  \t1\r\nmeningar\tNN.UTR.PLU.IND.NOM\tmening\tmening..1\tmening..nn.1\t\
                  \t1\r\ningen\tDT.UTR.SIN.IND\tingen\tingen..1\tingen..pn.1\t\t1\r\
                  \nmetadata\tNN.UTR.SIN.IND.NOM\tmetadata\tmetadata..1\tmetadata..nn.1\t\
                  \t1\r\nPK\a\bÔøΩs.[ÔøΩ\x1D\0\0ÔøΩ\x1D\0\0PK\x03\x04\x14\0\0\0\0\0ÔøΩqbR\0\
                  \0\0\0\0\0\0\0\0\0\0\0\x12\0\0\0export/xml_pretty/PK\x03\x04\n\0\
                  \b\0\0\0ÔøΩjZR\0\0\0\0\0\0\0\0\0\0\0\0&\0\0\0export/xml_pretty/dokument1_export.xml<?xml\
                  \ version='1.0' encoding='UTF-8'?>\n<document>\n  <text author=\"\
                  Sparvutvecklare\" date=\"2020-03-11\" id=\"1\">\n    <sentence id=\"\
                  b1ac\">\n      <token baseform=\"|hej|\" pos=\"IN\">Hej</token>\n\
                  \      <token baseform=\"|\" pos=\"MAD\">!</token>\n    </sentence>\n\
                  \    <sentence id=\"b142\">\n      <token baseform=\"|den|den h√§r|\"\
                  \ pos=\"PN\">Det</token>\n      <token baseform=\"|h√§r|den h√§r:1|\"\
                  \ pos=\"AB\">h√§r</token>\n      <token baseform=\"|vara|\" pos=\"\
                  VB\" sentiment_label=\"neutral\">√§r</token>\n      <token baseform=\"\
                  |en|\" pos=\"DT\">en</token>\n      <token baseform=\"|korpus|\"\
                  \ pos=\"NN\">korpus</token>\n      <token baseform=\"|\" pos=\"\
                  MAD\">.</token>\n    </sentence>\n    <sentence id=\"b196\">\n \
                  \     <ne ex=\"ENAMEX\" name=\"Astrid Lindgren\" subtype=\"HUM\"\
                  \ type=\"PRS\">\n        <token baseform=\"|Astrid|\" pos=\"PM\"\
                  >Astrid</token>\n        <token baseform=\"|Lindgren|\" pos=\"PM\"\
                  >Lindgren</token>\n      </ne>\n      <token baseform=\"|vara|\"\
                  \ pos=\"VB\" sentiment_label=\"neutral\">√§r</token>\n      <token\
                  \ baseform=\"|f√∂da|f√∂dd|\" pos=\"PC\" sentiment_label=\"neutral\"\
                  >f√∂dd</token>\n      <token baseform=\"|i|\" pos=\"PP\">i</token>\n\
                  \      <ne ex=\"ENAMEX\" name=\"Vimmerby\" subtype=\"PPL\" type=\"\
                  LOC\">\n        <token baseform=\"|Vimmerby|\" pos=\"PM\">Vimmerby</token>\n\
                  \      </ne>\n      <ne ex=\"TIMEX\" name=\"1907\" subtype=\"DAT\"\
                  \ type=\"TME\">\n        <token baseform=\"|\" pos=\"RG\">1907</token>\n\
                  \      </ne>\n      <token baseform=\"|\" pos=\"MAD\">.</token>\n\
                  \    </sentence>\n    <sentence id=\"b175\">\n      <token baseform=\"\
                  |och|\" pos=\"KN\">Och</token>\n      <token baseform=\"|h√§r|\"\
                  \ pos=\"AB\">h√§r</token>\n      <token baseform=\"|komma|\" pos=\"\
                  VB\" sentiment_label=\"neutral\">kommer</token>\n      <token baseform=\"\
                  |den|en|\" pos=\"DT\">den</token>\n      <token baseform=\"|\" pos=\"\
                  RO\">tredje</token>\n      <token baseform=\"|mening|\" pos=\"NN\"\
                  \ sentiment_label=\"neutral\">meningen</token>\n      <token baseform=\"\
                  |i|\" pos=\"PP\">i</token>\n      <token baseform=\"|en|\" pos=\"\
                  DT\">ett</token>\n      <token baseform=\"|ny|\" pos=\"JJ\" sentiment_label=\"\
                  neutral\">nytt</token>\n      <token baseform=\"|stycke|\" pos=\"\
                  NN\" sentiment_label=\"neutral\">stycke</token>\n      <token baseform=\"\
                  |\" pos=\"MAD\">.</token>\n    </sentence>\n    <sentence id=\"\
                  b16a\">\n      <token baseform=\"|sista|\" pos=\"JJ\" sentiment_label=\"\
                  neutral\">Sista</token>\n      <token baseform=\"|mening|\" pos=\"\
                  NN\" sentiment_label=\"neutral\">meningen</token>\n      <token\
                  \ baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"neutral\">√§r</token>\n\
                  \      <token baseform=\"|kort|\" pos=\"JJ\" sentiment_label=\"\
                  neutral\">kort</token>\n      <token baseform=\"|och|\" pos=\"KN\"\
                  >och</token>\n      <token baseform=\"|inneh√•lla|\" pos=\"VB\" sentiment_label=\"\
                  neutral\">inneh√•ller</token>\n      <token baseform=\"|en|\" pos=\"\
                  DT\">en</token>\n      <token baseform=\"|\" pos=\"NN\">sammans√§ttningsform</token>\n\
                  \      <token baseform=\"|\" pos=\"MID\">:</token>\n      <token\
                  \ baseform=\"|f√∂delsedagskalas|\" pos=\"NN\">f√∂delsedagskalas</token>\n\
                  \      <token baseform=\"|\" pos=\"MAD\">.</token>\n    </sentence>\n\
                  \  </text>\n  <text author=\"Wikipedia\" date=\"2020-03-16\" id=\"\
                  2\">\n    <sentence id=\"b110\">\n      <token baseform=\"|spr√•kbank|\"\
                  \ pos=\"NN\">Spr√•kbanken</token>\n      <token baseform=\"|vara|\"\
                  \ pos=\"VB\" sentiment_label=\"neutral\">√§r</token>\n      <token\
                  \ baseform=\"|en|\" pos=\"DT\">en</token>\n      <token baseform=\"\
                  |\" pos=\"NN\">forskningsenhet</token>\n      <token baseform=\"\
                  |vid|\" pos=\"PP\">vid</token>\n      <ne ex=\"ENAMEX\" name=\"\
                  G√∂teborgs universitet\" subtype=\"EDU\" type=\"ORG\">\n        <token\
                  \ baseform=\"|G√∂teborg|G√∂teborgs universitet|\" pos=\"PM\">G√∂teborgs</token>\n\
                  \        <token baseform=\"|universitet|G√∂teborgs universitet:6|\"\
                  \ pos=\"NN\">universitet</token>\n      </ne>\n      <token baseform=\"\
                  |\" pos=\"MAD\">.</token>\n    </sentence>\n    <sentence id=\"\
                  b122\">\n      <token baseform=\"|den|\" pos=\"PN\">Den</token>\n\
                  \      <token baseform=\"|inr√§tta|\" pos=\"VB\" sentiment_label=\"\
                  neutral\">inr√§ttades</token>\n      <token baseform=\"|\" pos=\"\
                  KN\">som</token>\n      <token baseform=\"|en|\" pos=\"DT\">en</token>\n\
                  \      <token baseform=\"|nationell|\" pos=\"JJ\" sentiment_label=\"\
                  neutral\">nationell</token>\n      <token baseform=\"|resurs|\"\
                  \ pos=\"NN\" sentiment_label=\"positive\">resurs</token>\n     \
                  \ <token baseform=\"|\" pos=\"RG\">1975</token>\n      <token baseform=\"\
                  |\" pos=\"MID\">,</token>\n      <token baseform=\"|\" pos=\"KN\"\
                  >som</token>\n      <token baseform=\"|en|\" pos=\"DT\">ett</token>\n\
                  \      <token baseform=\"|direkt|\" pos=\"JJ\" sentiment_label=\"\
                  neutral\">direkt</token>\n      <token baseform=\"|resultat|\" pos=\"\
                  NN\" sentiment_label=\"neutral\">resultat</token>\n      <token\
                  \ baseform=\"|av|\" pos=\"PP\">av</token>\n      <ne ex=\"ENAMEX\"\
                  \ name=\"Sture All√©ns\" subtype=\"HUM\" type=\"PRS\">\n        <token\
                  \ baseform=\"|Sture|\" pos=\"PM\">Sture</token>\n        <token\
                  \ baseform=\"|\" pos=\"PM\">All√©ns</token>\n      </ne>\n      <token\
                  \ baseform=\"|\" pos=\"NN\">pionj√§rinsatser</token>\n      <token\
                  \ baseform=\"|inom|\" pos=\"PP\">inom</token>\n      <token baseform=\"\
                  |svensk|\" pos=\"JJ\" sentiment_label=\"neutral\">svensk</token>\n\
                  \      <token baseform=\"|korpuslingvistik|\" pos=\"NN\">korpuslingvistik</token>\n\
                  \      <ne ex=\"TIMEX\" name=\"under 1960-talet\" subtype=\"DAT\"\
                  \ type=\"TME\">\n        <token baseform=\"|under|\" pos=\"PP\"\
                  >under</token>\n        <token baseform=\"|1960-tal|\" pos=\"NN\"\
                  >1960-talet</token>\n      </ne>\n      <token baseform=\"|\" pos=\"\
                  MAD\">.</token>\n    </sentence>\n    <sentence id=\"b1c1\">\n \
                  \     <token baseform=\"|spr√•kbank|\" pos=\"NN\">Spr√•kbankens</token>\n\
                  \      <token baseform=\"|uppdrag|\" pos=\"NN\" sentiment_label=\"\
                  neutral\">uppdrag</token>\n      <token baseform=\"|bli|\" pos=\"\
                  VB\" sentiment_label=\"neutral\">blev</token>\n      <token baseform=\"\
                  |och|\" pos=\"KN\">och</token>\n      <token baseform=\"|vara|\"\
                  \ pos=\"VB\" sentiment_label=\"neutral\">√§r</token>\n      <token\
                  \ baseform=\"|fortfarande|\" pos=\"AB\">fortfarande</token>\n  \
                  \    <token baseform=\"|att|\" pos=\"IE\">att</token>\n      <token\
                  \ baseform=\"|samla|\" pos=\"VB\" sentiment_label=\"neutral\">samla</token>\n\
                  \      <token baseform=\"|in|\" pos=\"PL\">in</token>\n      <token\
                  \ baseform=\"|\" pos=\"MID\">,</token>\n      <token baseform=\"\
                  |f√∂r√§dla|\" pos=\"VB\">f√∂r√§dla</token>\n      <token baseform=\"\
                  |och|\" pos=\"KN\">och</token>\n      <token baseform=\"|tillg√§ngligg√∂ra|\"\
                  \ pos=\"VB\">tillg√§ngligg√∂ra</token>\n      <token baseform=\"|spr√•kresurs|\"\
                  \ pos=\"NN\">spr√•kresurser</token>\n      <token baseform=\"|√•t|\"\
                  \ pos=\"PP\">√•t</token>\n      <token baseform=\"|forskare|\" pos=\"\
                  NN\" sentiment_label=\"neutral\">forskare</token>\n      <token\
                  \ baseform=\"|och|\" pos=\"KN\">och</token>\n      <token baseform=\"\
                  |allm√§nhet|\" pos=\"NN\" sentiment_label=\"neutral\">allm√§nheten</token>\n\
                  \      <token baseform=\"|\" pos=\"MID\">,</token>\n      <token\
                  \ baseform=\"|och|\" pos=\"KN\">och</token>\n      <token baseform=\"\
                  |att|\" pos=\"IE\">att</token>\n      <token baseform=\"|bedriva|\"\
                  \ pos=\"VB\" sentiment_label=\"neutral\">bedriva</token>\n     \
                  \ <token baseform=\"|forskning|\" pos=\"NN\" sentiment_label=\"\
                  neutral\">forskning</token>\n      <token baseform=\"|och|\" pos=\"\
                  KN\">och</token>\n      <token baseform=\"|utveckling|\" pos=\"\
                  NN\" sentiment_label=\"neutral\">utveckling</token>\n      <token\
                  \ baseform=\"|\" pos=\"HP\">som</token>\n      <token baseform=\"\
                  |fr√§mja|\" pos=\"VB\" sentiment_label=\"positive\">fr√§mjar</token>\n\
                  \      <token baseform=\"|s√•n|\" pos=\"JJ\">s√•n</token>\n      <token\
                  \ baseform=\"|anv√§ndning|\" pos=\"NN\" sentiment_label=\"neutral\"\
                  >anv√§ndning</token>\n      <token baseform=\"|\" pos=\"MAD\">.</token>\n\
                  \    </sentence>\n    <sentence id=\"b1cd\">\n      <token baseform=\"\
                  |i|\" pos=\"PP\">I</token>\n      <token baseform=\"|Spr√•kbanken|\"\
                  \ pos=\"PM\">Spr√•kbanken</token>\n      <token baseform=\"|finna|finnas|\"\
                  \ pos=\"VB\" sentiment_label=\"neutral\">finns</token>\n      <token\
                  \ baseform=\"|en|\" pos=\"DT\">en</token>\n      <token baseform=\"\
                  |unik|\" pos=\"JJ\" sentiment_label=\"neutral\">unik</token>\n \
                  \     <token baseform=\"|kompetens|\" pos=\"NN\" sentiment_label=\"\
                  positive\">kompetens</token>\n      <token baseform=\"|vad|vad f√∂r|\"\
                  \ pos=\"HP\">vad</token>\n      <token baseform=\"|g√§lla|\" pos=\"\
                  VB\" sentiment_label=\"neutral\">g√§ller</token>\n      <token baseform=\"\
                  |svensk|\" pos=\"JJ\" sentiment_label=\"neutral\">svenska</token>\n\
                  \      <token baseform=\"|textkorpus|\" pos=\"NN\">textkorpusar</token>\n\
                  \      <token baseform=\"|\" pos=\"MID\">,</token>\n      <token\
                  \ baseform=\"|\" pos=\"NN\">parallellkorpusar</token>\n      <token\
                  \ baseform=\"|\" pos=\"MID\">,</token>\n      <token baseform=\"\
                  |svensk|\" pos=\"JJ\" sentiment_label=\"neutral\">svenska</token>\n\
                  \      <token baseform=\"|elektronisk|\" pos=\"JJ\" sentiment_label=\"\
                  neutral\">elektroniska</token>\n      <token baseform=\"|lexikonresurs|\"\
                  \ pos=\"NN\">lexikonresurser</token>\n      <token baseform=\"|samt|\"\
                  \ pos=\"KN\">samt</token>\n      <token baseform=\"|\" pos=\"JJ\"\
                  >spr√•kteknologiska</token>\n      <token baseform=\"|verktyg|\"\
                  \ pos=\"NN\">verktyg</token>\n      <token baseform=\"|f√∂r|vad f√∂r:7|\"\
                  \ pos=\"PP\">f√∂r</token>\n      <token baseform=\"|att|\" pos=\"\
                  IE\">att</token>\n      <token baseform=\"|bearbeta|\" pos=\"VB\"\
                  >bearbeta</token>\n      <token baseform=\"|\" pos=\"MID\">,</token>\n\
                  \      <token baseform=\"|annotera|\" pos=\"VB\">annotera</token>\n\
                  \      <token baseform=\"|och|\" pos=\"KN\">och</token>\n      <token\
                  \ baseform=\"|visa|visa upp|\" pos=\"VB\" sentiment_label=\"neutral\"\
                  >visa</token>\n      <token baseform=\"|upp|visa upp:26|\" pos=\"\
                  PL\">upp</token>\n      <token baseform=\"|textkorpus|\" pos=\"\
                  NN\">textkorpusar</token>\n      <token baseform=\"|\" pos=\"MAD\"\
                  >.</token>\n    </sentence>\n    <sentence id=\"b15f\">\n      <token\
                  \ baseform=\"|huvuddel|\" pos=\"NN\">Huvuddelen</token>\n      <token\
                  \ baseform=\"|av|\" pos=\"PP\">av</token>\n      <token baseform=\"\
                  |material|\" pos=\"NN\" sentiment_label=\"neutral\">materialet</token>\n\
                  \      <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"\
                  neutral\">√§r</token>\n      <token baseform=\"|modern|\" pos=\"\
                  JJ\" sentiment_label=\"positive\">modernt</token>\n      <token\
                  \ baseform=\"|\" pos=\"MID\">,</token>\n      <token baseform=\"\
                  |men|\" pos=\"KN\">men</token>\n      <token baseform=\"|ambition|\"\
                  \ pos=\"NN\" sentiment_label=\"neutral\">ambitionen</token>\n  \
                  \    <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"neutral\"\
                  >√§r</token>\n      <token baseform=\"|att|\" pos=\"SN\">att</token>\n\
                  \      <token baseform=\"|resurs|\" pos=\"NN\" sentiment_label=\"\
                  positive\">resurserna</token>\n      <token baseform=\"|skola|\"\
                  \ pos=\"VB\" sentiment_label=\"neutral\">ska</token>\n      <token\
                  \ baseform=\"|avspegla|\" pos=\"VB\">avspegla</token>\n      <token\
                  \ baseform=\"|hel|\" pos=\"JJ\" sentiment_label=\"neutral\">hela</token>\n\
                  \      <token baseform=\"|den|en|\" pos=\"DT\">den</token>\n   \
                  \   <token baseform=\"|skriva|\" pos=\"PC\" sentiment_label=\"neutral\"\
                  >skrivna</token>\n      <token baseform=\"|svenska|\" pos=\"NN\"\
                  \ sentiment_label=\"neutral\">svenskans</token>\n      <token baseform=\"\
                  |historia|\" pos=\"NN\" sentiment_label=\"neutral\">historia</token>\n\
                  \      <token baseform=\"|\" pos=\"MID\">-</token>\n      <token\
                  \ baseform=\"|fr√•n|\" pos=\"PP\">fr√•n</token>\n      <token baseform=\"\
                  |medeltida|\" pos=\"JJ\">medeltida</token>\n      <token baseform=\"\
                  |\" pos=\"NN\">fornsvenska</token>\n      <token baseform=\"|till|\"\
                  \ pos=\"PP\">till</token>\n      <token baseform=\"|modern|\" pos=\"\
                  JJ\" sentiment_label=\"positive\">modern</token>\n      <token baseform=\"\
                  |svenska|\" pos=\"NN\" sentiment_label=\"neutral\">svenska</token>\n\
                  \      <token baseform=\"|\" pos=\"MID\">-</token>\n      <token\
                  \ baseform=\"|med|\" pos=\"PP\">med</token>\n      <token baseform=\"\
                  |all|\" pos=\"DT\">alla</token>\n      <token baseform=\"|den|\"\
                  \ pos=\"PS\">dess</token>\n      <token baseform=\"|genre|\" pos=\"\
                  NN\">genrer</token>\n      <token baseform=\"|\" pos=\"MAD\">.</token>\n\
                  \    </sentence>\n    <sentence id=\"b13b\">\n      <token baseform=\"\
                  |huvuddel|\" pos=\"NN\">Huvuddelen</token>\n      <token baseform=\"\
                  |av|\" pos=\"PP\">av</token>\n      <token baseform=\"|resurs|\"\
                  \ pos=\"NN\" sentiment_label=\"positive\">resurserna</token>\n \
                  \     <token baseform=\"|\" pos=\"MID\">,</token>\n      <token\
                  \ baseform=\"|korpus|\" pos=\"NN\">korpusar</token>\n      <token\
                  \ baseform=\"|och|\" pos=\"KN\">och</token>\n      <token baseform=\"\
                  |lexikon|\" pos=\"NN\">lexikon</token>\n      <token baseform=\"\
                  |\" pos=\"MID\">,</token>\n      <token baseform=\"|vara|\" pos=\"\
                  VB\" sentiment_label=\"neutral\">√§r</token>\n      <token baseform=\"\
                  |fri|\" pos=\"AB\" sentiment_label=\"positive\">fritt</token>\n\
                  \      <token baseform=\"|√•tkomlig|\" pos=\"JJ\">√•tkomliga</token>\n\
                  \      <token baseform=\"|f√∂r|\" pos=\"PP\">f√∂r</token>\n      <token\
                  \ baseform=\"|s√∂kning|\" pos=\"NN\">s√∂kning</token>\n      <token\
                  \ baseform=\"|via|\" pos=\"PP\">via</token>\n      <token baseform=\"\
                  |\" pos=\"NN\">webbgr√§nssnitt</token>\n      <token baseform=\"\
                  |\" pos=\"MAD\">.</token>\n    </sentence>\n  </text>\n  <text id=\"\
                  1\">\n    <sentence id=\"b100\">\n      <token baseform=\"|hej|\"\
                  \ pos=\"IN\">Hej</token>\n      <i sparv.overlap=\"b1-1\">\n   \
                  \     <token baseform=\"|p√•|\" pos=\"PP\">p√•</token>\n        <token\
                  \ baseform=\"|du|\" pos=\"PN\">dig</token>\n        <token baseform=\"\
                  |\" pos=\"MAD\">.</token>\n      </i>\n    </sentence>\n    <i sparv.overlap=\"\
                  b1-1\">\n      <sentence id=\"b1f4\" sparv.overlap=\"b1-2\">\n \
                  \       <token baseform=\"|kunna|\" pos=\"VB\" sentiment_label=\"\
                  neutral\">Kan</token>\n        <token baseform=\"|vi|\" pos=\"PN\"\
                  >vi</token>\n      </sentence>\n    </i>\n    <sentence id=\"b1f4\"\
                  \ sparv.overlap=\"b1-2\">\n      <token baseform=\"|hantera|\" pos=\"\
                  VB\" sentiment_label=\"neutral\">hantera</token>\n      <token baseform=\"\
                  |√∂verlappa|\" pos=\"PC\">√∂verlappande</token>\n      <token baseform=\"\
                  |tagg|\" pos=\"NN\">taggar</token>\n      <token baseform=\"|\"\
                  \ pos=\"MAD\">?</token>\n    </sentence>\n  </text>\n</document>\n\
                  PK\a\bu:ÔøΩÔøΩ[3\0\0[3\0\0PK\x03\x04\n\0\b\0\0\0ÔøΩkZR\0\0\0\0\0\0\0\0\
                  \0\0\0\0&\0\0\0export/xml_pretty/dokument2_export.xml<?xml version='1.0'\
                  \ encoding='UTF-8'?>\n<text>\n  <sentence id=\"e00a\">\n    <token\
                  \ baseform=\"|hej|\" pos=\"IN\">Hej</token>\n    <token baseform=\"\
                  |\" pos=\"MAD\">!</token>\n  </sentence>\n  <sentence id=\"e089\"\
                  >\n    <token baseform=\"|den|den h√§r|\" pos=\"PN\">Det</token>\n\
                  \    <token baseform=\"|h√§r|den h√§r:1|\" pos=\"AB\">h√§r</token>\n\
                  \    <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"neutral\"\
                  >√§r</token>\n    <token baseform=\"|en|en annan|\" pos=\"DT\">en</token>\n\
                  \    <token baseform=\"|annan|en annan:4|\" pos=\"JJ\">annan</token>\n\
                  \    <token baseform=\"|text|\" pos=\"NN\" sentiment_label=\"neutral\"\
                  >text</token>\n    <token baseform=\"|\" pos=\"MAD\">.</token>\n\
                  \  </sentence>\n  <sentence id=\"e0b6\">\n    <token baseform=\"\
                  |den|\" pos=\"PN\">Den</token>\n    <token baseform=\"|vara|\" pos=\"\
                  VB\" sentiment_label=\"neutral\">√§r</token>\n    <token baseform=\"\
                  |\" pos=\"JJ\">j√§ttekort</token>\n    <token baseform=\"|\" pos=\"\
                  MAD\">.</token>\n  </sentence>\n  <sentence id=\"e0be\">\n    <token\
                  \ baseform=\"|den|\" pos=\"PN\">Den</token>\n    <token baseform=\"\
                  |ha|\" pos=\"VB\" sentiment_label=\"neutral\">har</token>\n    <token\
                  \ baseform=\"|bara|\" pos=\"AB\">bara</token>\n    <token baseform=\"\
                  |tre|\" pos=\"RG\">tre</token>\n    <token baseform=\"|mening|\"\
                  \ pos=\"NN\" sentiment_label=\"neutral\">meningar</token>\n    <token\
                  \ baseform=\"|och|\" pos=\"KN\">och</token>\n    <token baseform=\"\
                  |ingen|\" pos=\"DT\">ingen</token>\n    <token baseform=\"|metadata|\"\
                  \ pos=\"NN\">metadata</token>\n    <token baseform=\"|\" pos=\"\
                  MAD\">.</token>\n  </sentence>\n</text>\nPK\a\b\b+ÔøΩ&ÔøΩ\x05\0\0ÔøΩ\x05\
                  \0\0PK\x01\x02-\x03\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\a\0\
                  \0\0\0\0\0\0\0\0\x10\0ÔøΩA\0\0\0\0export/PK\x01\x02-\x03\x14\0\0\0\
                  \0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\v\0\0\0\0\0\0\0\0\0\x10\0ÔøΩA%\0\0\
                  \0export/csv/PK\x01\x02-\x03\n\0\b\0\0\0ÔøΩjZRYÔøΩ\"ÔøΩÔøΩ\x12\0\0ÔøΩ\x12\0\
                  \0\x18\0\0\0\0\0\0\0\0\0\0\0ÔøΩÔøΩN\0\0\0export/csv/dokument1.csvPK\x01\
                  \x02-\x03\n\0\b\0\0\0ÔøΩkZRÔøΩ7√æ\x0E\x02\0\0\x0E\x02\0\0\x18\0\0\0\0\
                  \0\0\0\0\0\0\0ÔøΩÔøΩ]\x13\0\0export/csv/dokument2.csvPK\x01\x02-\x03\
                  \x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\x16\0\0\0\0\0\0\0\0\0\
                  \x10\0ÔøΩAÔøΩ\x15\0\0export/frequency_list/PK\x01\x02-\x03\n\0\b\0\0\
                  \0ÔøΩkZRÔøΩs.[ÔøΩ\x1D\0\0ÔøΩ\x1D\0\0(\0\0\0\0\0\0\0\0\0\0\0ÔøΩÔøΩÔøΩ\x15\0\0export/frequency_list/stats_mini-swe.csvPK\x01\
                  \x02-\x03\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\x12\0\0\0\0\0\
                  \0\0\0\0\x10\0ÔøΩA44\0\0export/xml_pretty/PK\x01\x02-\x03\n\0\b\0\0\
                  \0ÔøΩjZRu:ÔøΩÔøΩ[3\0\0[3\0\0&\0\0\0\0\0\0\0\0\0\0\0ÔøΩÔøΩd4\0\0export/xml_pretty/dokument1_export.xmlPK\x01\
                  \x02-\x03\n\0\b\0\0\0ÔøΩkZR\b+ÔøΩ&ÔøΩ\x05\0\0ÔøΩ\x05\0\0&\0\0\0\0\0\0\0\0\
                  \0\0\0ÔøΩÔøΩ\x13h\0\0export/xml_pretty/dokument2_export.xmlPK\x05\x06\
                  \0\0\0\0\t\0\t\0|\x02\0\0\x1Fn\0\0\0\0"
              example: "PK\x03\x04\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\a\0\0\
                \0export/PK\x03\x04\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\v\0\0\
                \0export/csv/PK\x03\x04\n\0\b\0\0\0ÔøΩjZR\0\0\0\0\0\0\0\0\0\0\0\0\x18\
                \0\0\0export/csv/dokument1.csvtoken\tbaseform\tpos\tsentiment_label\n\
                # text.date = 2020-03-11\n# text.author = Sparvutvecklare\n# text.id\
                \ = 1\n# sentence.id = b1ac\nHej\t|hej|\tIN\t\n!\t|\tMAD\t\n\n# sentence.id\
                \ = b142\nDet\t|den|den h√§r|\tPN\t\nh√§r\t|h√§r|den h√§r:1|\tAB\t\n√§r\t\
                |vara|\tVB\tneutral\nen\t|en|\tDT\t\nkorpus\t|korpus|\tNN\t\n.\t|\t\
                MAD\t\n\n# sentence.id = b196\n# ne.ex = ENAMEX\n# ne.name = Astrid\
                \ Lindgren\n# ne.subtype = HUM\n# ne.type = PRS\nAstrid\t|Astrid|\t\
                PM\t\nLindgren\t|Lindgren|\tPM\t\n√§r\t|vara|\tVB\tneutral\nf√∂dd\t\
                |f√∂da|f√∂dd|\tPC\tneutral\ni\t|i|\tPP\t\n# ne.ex = ENAMEX\n# ne.name\
                \ = Vimmerby\n# ne.subtype = PPL\n# ne.type = LOC\nVimmerby\t|Vimmerby|\t\
                PM\t\n# ne.ex = TIMEX\n# ne.name = 1907\n# ne.subtype = DAT\n# ne.type\
                \ = TME\n1907\t|\tRG\t\n.\t|\tMAD\t\n\n# sentence.id = b175\nOch\t\
                |och|\tKN\t\nh√§r\t|h√§r|\tAB\t\nkommer\t|komma|\tVB\tneutral\nden\t\
                |den|en|\tDT\t\ntredje\t|\tRO\t\nmeningen\t|mening|\tNN\tneutral\n\
                i\t|i|\tPP\t\nett\t|en|\tDT\t\nnytt\t|ny|\tJJ\tneutral\nstycke\t|stycke|\t\
                NN\tneutral\n.\t|\tMAD\t\n\n# sentence.id = b16a\nSista\t|sista|\t\
                JJ\tneutral\nmeningen\t|mening|\tNN\tneutral\n√§r\t|vara|\tVB\tneutral\n\
                kort\t|kort|\tJJ\tneutral\noch\t|och|\tKN\t\ninneh√•ller\t|inneh√•lla|\t\
                VB\tneutral\nen\t|en|\tDT\t\nsammans√§ttningsform\t|\tNN\t\n:\t|\t\
                MID\t\nf√∂delsedagskalas\t|f√∂delsedagskalas|\tNN\t\n.\t|\tMAD\t\n\n\
                # text.date = 2020-03-16\n# text.author = Wikipedia\n# text.id = 2\n\
                # sentence.id = b110\nSpr√•kbanken\t|spr√•kbank|\tNN\t\n√§r\t|vara|\t\
                VB\tneutral\nen\t|en|\tDT\t\nforskningsenhet\t|\tNN\t\nvid\t|vid|\t\
                PP\t\n# ne.ex = ENAMEX\n# ne.name = G√∂teborgs universitet\n# ne.subtype\
                \ = EDU\n# ne.type = ORG\nG√∂teborgs\t|G√∂teborg|G√∂teborgs universitet|\t\
                PM\t\nuniversitet\t|universitet|G√∂teborgs universitet:6|\tNN\t\n.\t\
                |\tMAD\t\n\n# sentence.id = b122\nDen\t|den|\tPN\t\ninr√§ttades\t|inr√§tta|\t\
                VB\tneutral\nsom\t|\tKN\t\nen\t|en|\tDT\t\nnationell\t|nationell|\t\
                JJ\tneutral\nresurs\t|resurs|\tNN\tpositive\n1975\t|\tRG\t\n,\t|\t\
                MID\t\nsom\t|\tKN\t\nett\t|en|\tDT\t\ndirekt\t|direkt|\tJJ\tneutral\n\
                resultat\t|resultat|\tNN\tneutral\nav\t|av|\tPP\t\n# ne.ex = ENAMEX\n\
                # ne.name = Sture All√©ns\n# ne.subtype = HUM\n# ne.type = PRS\nSture\t\
                |Sture|\tPM\t\nAll√©ns\t|\tPM\t\npionj√§rinsatser\t|\tNN\t\ninom\t|inom|\t\
                PP\t\nsvensk\t|svensk|\tJJ\tneutral\nkorpuslingvistik\t|korpuslingvistik|\t\
                NN\t\n# ne.ex = TIMEX\n# ne.name = under 1960-talet\n# ne.subtype\
                \ = DAT\n# ne.type = TME\nunder\t|under|\tPP\t\n1960-talet\t|1960-tal|\t\
                NN\t\n.\t|\tMAD\t\n\n# sentence.id = b1c1\nSpr√•kbankens\t|spr√•kbank|\t\
                NN\t\nuppdrag\t|uppdrag|\tNN\tneutral\nblev\t|bli|\tVB\tneutral\n\
                och\t|och|\tKN\t\n√§r\t|vara|\tVB\tneutral\nfortfarande\t|fortfarande|\t\
                AB\t\natt\t|att|\tIE\t\nsamla\t|samla|\tVB\tneutral\nin\t|in|\tPL\t\
                \n,\t|\tMID\t\nf√∂r√§dla\t|f√∂r√§dla|\tVB\t\noch\t|och|\tKN\t\ntillg√§ngligg√∂ra\t\
                |tillg√§ngligg√∂ra|\tVB\t\nspr√•kresurser\t|spr√•kresurs|\tNN\t\n√•t\t\
                |√•t|\tPP\t\nforskare\t|forskare|\tNN\tneutral\noch\t|och|\tKN\t\n\
                allm√§nheten\t|allm√§nhet|\tNN\tneutral\n,\t|\tMID\t\noch\t|och|\tKN\t\
                \natt\t|att|\tIE\t\nbedriva\t|bedriva|\tVB\tneutral\nforskning\t|forskning|\t\
                NN\tneutral\noch\t|och|\tKN\t\nutveckling\t|utveckling|\tNN\tneutral\n\
                som\t|\tHP\t\nfr√§mjar\t|fr√§mja|\tVB\tpositive\ns√•n\t|s√•n|\tJJ\t\n\
                anv√§ndning\t|anv√§ndning|\tNN\tneutral\n.\t|\tMAD\t\n\n# sentence.id\
                \ = b1cd\nI\t|i|\tPP\t\nSpr√•kbanken\t|Spr√•kbanken|\tPM\t\nfinns\t\
                |finna|finnas|\tVB\tneutral\nen\t|en|\tDT\t\nunik\t|unik|\tJJ\tneutral\n\
                kompetens\t|kompetens|\tNN\tpositive\nvad\t|vad|vad f√∂r|\tHP\t\ng√§ller\t\
                |g√§lla|\tVB\tneutral\nsvenska\t|svensk|\tJJ\tneutral\ntextkorpusar\t\
                |textkorpus|\tNN\t\n,\t|\tMID\t\nparallellkorpusar\t|\tNN\t\n,\t|\t\
                MID\t\nsvenska\t|svensk|\tJJ\tneutral\nelektroniska\t|elektronisk|\t\
                JJ\tneutral\nlexikonresurser\t|lexikonresurs|\tNN\t\nsamt\t|samt|\t\
                KN\t\nspr√•kteknologiska\t|\tJJ\t\nverktyg\t|verktyg|\tNN\t\nf√∂r\t\
                |f√∂r|vad f√∂r:7|\tPP\t\natt\t|att|\tIE\t\nbearbeta\t|bearbeta|\tVB\t\
                \n,\t|\tMID\t\nannotera\t|annotera|\tVB\t\noch\t|och|\tKN\t\nvisa\t\
                |visa|visa upp|\tVB\tneutral\nupp\t|upp|visa upp:26|\tPL\t\ntextkorpusar\t\
                |textkorpus|\tNN\t\n.\t|\tMAD\t\n\n# sentence.id = b15f\nHuvuddelen\t\
                |huvuddel|\tNN\t\nav\t|av|\tPP\t\nmaterialet\t|material|\tNN\tneutral\n\
                √§r\t|vara|\tVB\tneutral\nmodernt\t|modern|\tJJ\tpositive\n,\t|\tMID\t\
                \nmen\t|men|\tKN\t\nambitionen\t|ambition|\tNN\tneutral\n√§r\t|vara|\t\
                VB\tneutral\natt\t|att|\tSN\t\nresurserna\t|resurs|\tNN\tpositive\n\
                ska\t|skola|\tVB\tneutral\navspegla\t|avspegla|\tVB\t\nhela\t|hel|\t\
                JJ\tneutral\nden\t|den|en|\tDT\t\nskrivna\t|skriva|\tPC\tneutral\n\
                svenskans\t|svenska|\tNN\tneutral\nhistoria\t|historia|\tNN\tneutral\n\
                -\t|\tMID\t\nfr√•n\t|fr√•n|\tPP\t\nmedeltida\t|medeltida|\tJJ\t\nfornsvenska\t\
                |\tNN\t\ntill\t|till|\tPP\t\nmodern\t|modern|\tJJ\tpositive\nsvenska\t\
                |svenska|\tNN\tneutral\n-\t|\tMID\t\nmed\t|med|\tPP\t\nalla\t|all|\t\
                DT\t\ndess\t|den|\tPS\t\ngenrer\t|genre|\tNN\t\n.\t|\tMAD\t\n\n# sentence.id\
                \ = b13b\nHuvuddelen\t|huvuddel|\tNN\t\nav\t|av|\tPP\t\nresurserna\t\
                |resurs|\tNN\tpositive\n,\t|\tMID\t\nkorpusar\t|korpus|\tNN\t\noch\t\
                |och|\tKN\t\nlexikon\t|lexikon|\tNN\t\n,\t|\tMID\t\n√§r\t|vara|\tVB\t\
                neutral\nfritt\t|fri|\tAB\tpositive\n√•tkomliga\t|√•tkomlig|\tJJ\t\n\
                f√∂r\t|f√∂r|\tPP\t\ns√∂kning\t|s√∂kning|\tNN\t\nvia\t|via|\tPP\t\nwebbgr√§nssnitt\t\
                |\tNN\t\n.\t|\tMAD\t\n\n# text.date = \n# text.author = \n# text.id\
                \ = 1\n# sentence.id = b100\nHej\t|hej|\tIN\t\np√•\t|p√•|\tPP\t\ndig\t\
                |du|\tPN\t\n.\t|\tMAD\t\n\n# sentence.id = b1f4\nKan\t|kunna|\tVB\t\
                neutral\nvi\t|vi|\tPN\t\nhantera\t|hantera|\tVB\tneutral\n√∂verlappande\t\
                |√∂verlappa|\tPC\t\ntaggar\t|tagg|\tNN\t\n?\t|\tMAD\t\nPK\a\bYÔøΩ\"ÔøΩÔøΩ\x12\
                \0\0ÔøΩ\x12\0\0PK\x03\x04\n\0\b\0\0\0ÔøΩkZR\0\0\0\0\0\0\0\0\0\0\0\0\x18\
                \0\0\0export/csv/dokument2.csvtoken\tbaseform\tpos\tsentiment_label\n\
                # text\n# sentence.id = e00a\nHej\t|hej|\tIN\t\n!\t|\tMAD\t\n\n# sentence.id\
                \ = e089\nDet\t|den|den h√§r|\tPN\t\nh√§r\t|h√§r|den h√§r:1|\tAB\t\n√§r\t\
                |vara|\tVB\tneutral\nen\t|en|en annan|\tDT\t\nannan\t|annan|en annan:4|\t\
                JJ\t\ntext\t|text|\tNN\tneutral\n.\t|\tMAD\t\n\n# sentence.id = e0b6\n\
                Den\t|den|\tPN\t\n√§r\t|vara|\tVB\tneutral\nj√§ttekort\t|\tJJ\t\n.\t\
                |\tMAD\t\n\n# sentence.id = e0be\nDen\t|den|\tPN\t\nhar\t|ha|\tVB\t\
                neutral\nbara\t|bara|\tAB\t\ntre\t|tre|\tRG\t\nmeningar\t|mening|\t\
                NN\tneutral\noch\t|och|\tKN\t\ningen\t|ingen|\tDT\t\nmetadata\t|metadata|\t\
                NN\t\n.\t|\tMAD\t\nPK\a\bÔøΩ7√æ\x0E\x02\0\0\x0E\x02\0\0PK\x03\x04\x14\
                \0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\x16\0\0\0export/frequency_list/PK\x03\
                \x04\n\0\b\0\0\0ÔøΩkZR\0\0\0\0\0\0\0\0\0\0\0\0(\0\0\0export/frequency_list/stats_mini-swe.csvtoken\t\
                POS\tlemma\tSALDO sense\tlemgram\tcompound\tcount\r\n.\tMAD\t\t\t\t\
                \t14\r\n√§r\tVB.PRS.AKT\tvara\tvara..1\tvara..vb.1\t\t10\r\noch\tKN\t\
                och\toch..1\toch..kn.1\t\t9\r\n,\tMID\t\t\t\t\t9\r\nen\tDT.UTR.SIN.IND\t\
                en\tden..1\ten..al.1\t\t6\r\nHej\tIN\thej\thej..1\thej..in.1\t\t3\r\
                \nDen\tPN.UTR.SIN.DEF.SUB+OBJ\tden\tden..2\tden..pn.1\t\t3\r\nav\t\
                PP\tav\tav..1\tav..pp.1\t\t3\r\natt\tIE\tatt\tatt..1\tatt..sn.1\t\t\
                3\r\n!\tMAD\t\t\t\t\t2\r\nDet\tPN.NEU.SIN.DEF.SUB+OBJ\tden\tden..2\t\
                den..pn.1\t\t2\r\nh√§r\tAB\th√§r\tden_h√§r..1\th√§r..ab.1\t\t2\r\ni\t\
                PP\ti\ti..2\ti..pp.1\t\t2\r\nden\tDT.UTR.SIN.DEF\tden\tden..1\tden..pn.1\t\
                \t2\r\nmeningen\tNN.UTR.SIN.DEF.NOM\tmening\tmening..1\tmening..nn.1\t\
                \t2\r\nett\tDT.NEU.SIN.IND\ten\tden..1\ten..al.1\t\t2\r\nsom\tKN\t\
                \t\t\t\t2\r\nsvenska\tJJ.POS.UTR+NEU.PLU.IND+DEF.NOM\tsvensk\tsvensk..1\t\
                svensk..av.1\t\t2\r\ntextkorpusar\tNN.UTR.PLU.IND.NOM\ttextkorpus\t\
                textkorpus..1\ttextkorpus..nn.1\t\t2\r\nf√∂r\tPP\tf√∂r\tf√∂r..1\tf√∂r..pp.1\t\
                \t2\r\nHuvuddelen\tNN.UTR.SIN.DEF.NOM\thuvuddel\thuvuddel..1\thuvuddel..nn.1\t\
                \t2\r\nresurserna\tNN.UTR.PLU.DEF.NOM\tresurs\tresurs..1\tresurs..nn.1\t\
                \t2\r\n-\tMID\t\t\t\t\t2\r\nkorpus\tNN.UTR.SIN.IND.NOM\tkorpus\tkorpus..1\t\
                korpus..nn.1\t\t1\r\nAstrid\tPM.NOM\tAstrid\tAstrid..1\tAstrid..pm.1\t\
                \t1\r\nLindgren\tPM.NOM\tLindgren\tLindgren..1\tLindgren..pm.1\t\t\
                1\r\nf√∂dd\tPC.PRF.UTR.SIN.IND.NOM\tf√∂da\tf√∂dd..1\tf√∂da..vb.1\t\t1\r\
                \nVimmerby\tPM.NOM\tVimmerby\tVimmerby..1\tVimmerby..pm.1\t\t1\r\n\
                1907\tRG.NOM\t\t\t\t\t1\r\nOch\tKN\toch\toch..1\toch..kn.1\t\t1\r\n\
                h√§r\tAB\th√§r\th√§r..1\th√§r..ab.1\t\t1\r\nkommer\tVB.PRS.AKT\tkomma\t\
                komma..1\tkomma..vb.1\t\t1\r\ntredje\tRO.NOM\t\t\t\t\t1\r\nnytt\t\
                JJ.POS.NEU.SIN.IND.NOM\tny\tny..1\tny..av.1\t\t1\r\nstycke\tNN.NEU.SIN.IND.NOM\t\
                stycke\tstycke..1\tstycke..nn.1\t\t1\r\nSista\tJJ.SUV.UTR+NEU.SIN+PLU.DEF.NOM\t\
                sista\tsista..1\tsista..av.1\t\t1\r\nkort\tJJ.POS.UTR.SIN.IND.NOM\t\
                kort\tkort..1\tkort..av.1\t\t1\r\ninneh√•ller\tVB.PRS.AKT\tinneh√•lla\t\
                inneh√•lla..1\tinneh√•lla..vb.1\t\t1\r\nsammans√§ttningsform\tNN.UTR.SIN.IND.NOM\t\
                \t\t\tsammans√§ttning..nn.1+form..nn.1\t1\r\n:\tMID\t\t\t\t\t1\r\n\
                f√∂delsedagskalas\tNN.NEU.SIN.IND.NOM\tf√∂delsedagskalas\tf√∂delsedagskalas..1\t\
                f√∂delsedagskalas..nn.1\t\t1\r\nSpr√•kbanken\tNN.UTR.SIN.DEF.NOM\tspr√•kbank\t\
                spr√•kbank..1\tspr√•kbank..nn.1\t\t1\r\nforskningsenhet\tNN.UTR.SIN.IND.NOM\t\
                \t\t\tforskning..nn.1+enhet..nn.1\t1\r\nvid\tPP\tvid\tvid..1\tvid..pp.1\t\
                \t1\r\nG√∂teborgs\tPM.GEN\tG√∂teborg\tG√∂teborg..1\tG√∂teborg..pm.1\t\t\
                1\r\nuniversitet\tNN.NEU.SIN.IND.NOM\tuniversitet\tG√∂teborgs_universitet..1\t\
                universitet..nn.1\t\t1\r\ninr√§ttades\tVB.PRT.SFO\tinr√§tta\tinr√§tta..1\t\
                inr√§tta..vb.1\t\t1\r\nnationell\tJJ.POS.UTR.SIN.IND.NOM\tnationell\t\
                nationell..1\tnationell..av.1\t\t1\r\nresurs\tNN.UTR.SIN.IND.NOM\t\
                resurs\tresurs..1\tresurs..nn.1\t\t1\r\n1975\tRG.NOM\t\t\t\t\t1\r\n\
                direkt\tJJ.POS.NEU.SIN.IND.NOM\tdirekt\tdirekt..1\tdirekt..av.1\t\t\
                1\r\nresultat\tNN.NEU.SIN.IND.NOM\tresultat\tresultat..1\tresultat..nn.1\t\
                \t1\r\nSture\tPM.NOM\tSture\tSture..1\tSture..pm.1\t\t1\r\nAll√©ns\t\
                PM.GEN\t\t\t\t\t1\r\npionj√§rinsatser\tNN.UTR.PLU.IND.NOM\t\t\t\tpionj√§r..nn.1+insats..nn.1\t\
                1\r\ninom\tPP\tinom\tinom..1\tinom..pp.1\t\t1\r\nsvensk\tJJ.POS.UTR.SIN.IND.NOM\t\
                svensk\tsvensk..1\tsvensk..av.1\t\t1\r\nkorpuslingvistik\tNN.UTR.SIN.IND.NOM\t\
                korpuslingvistik\tkorpuslingvistik..1\tkorpuslingvistik..nn.1\t\t\
                1\r\nunder\tPP\tunder\tunder..1\tunder..pp.1\t\t1\r\n1960-talet\t\
                NN.NEU.SIN.DEF.NOM\t1960-tal\tnittonhundrasextiotalet..1\t_1960-tal..nn.1\t\
                \t1\r\nSpr√•kbankens\tNN.UTR.SIN.DEF.GEN\tspr√•kbank\tspr√•kbank..1\t\
                spr√•kbank..nn.1\t\t1\r\nuppdrag\tNN.NEU.SIN.IND.NOM\tuppdrag\tuppdrag..1\t\
                uppdrag..nn.1\t\t1\r\nblev\tVB.PRT.AKT\tbli\tbli..1\tbli..vb.1\t\t\
                1\r\nfortfarande\tAB\tfortfarande\tfortfarande..1\tfortfarande..ab.1\t\
                \t1\r\nsamla\tVB.INF.AKT\tsamla\tsamla..2\tsamla..vb.1\t\t1\r\nin\t\
                PL\tin\tin..1\tin..ab.1\t\t1\r\nf√∂r√§dla\tVB.INF.AKT\tf√∂r√§dla\tf√∂r√§dla..1\t\
                f√∂r√§dla..vb.1\t\t1\r\ntillg√§ngligg√∂ra\tVB.INF.AKT\ttillg√§ngligg√∂ra\t\
                tillg√§ngligg√∂ra..1\ttillg√§ngligg√∂ra..vb.1\t\t1\r\nspr√•kresurser\t\
                NN.UTR.PLU.IND.NOM\tspr√•kresurs\tspr√•kresurs..1\tspr√•kresurs..nn.1\t\
                \t1\r\n√•t\tPP\t√•t\t√•t..1\t√•t..pp.1\t\t1\r\nforskare\tNN.UTR.PLU.IND.NOM\t\
                forskare\tforskare..1\tforskare..nn.1\t\t1\r\nallm√§nheten\tNN.UTR.SIN.DEF.NOM\t\
                allm√§nhet\tallm√§nhet..1\tallm√§nhet..nn.1\t\t1\r\nbedriva\tVB.INF.AKT\t\
                bedriva\tbedriva..1\tbedriva..vb.1\t\t1\r\nforskning\tNN.UTR.SIN.IND.NOM\t\
                forskning\tforskning..1\tforskning..nn.1\t\t1\r\nutveckling\tNN.UTR.SIN.IND.NOM\t\
                utveckling\tutveckling..1\tutveckling..nn.1\t\t1\r\nsom\tHP.-.-.-\t\
                \t\t\t\t1\r\nfr√§mjar\tVB.PRS.AKT\tfr√§mja\tfr√§mja..1\tfr√§mja..vb.1\t\
                \t1\r\ns√•n\tJJ.POS.UTR.SIN.IND.NOM\ts√•n\ts√•dan..1\ts√•n..pn.1\t\t1\r\
                \nanv√§ndning\tNN.UTR.SIN.IND.NOM\tanv√§ndning\tanv√§ndning..1\tanv√§ndning..nn.1\t\
                \t1\r\nI\tPP\ti\ti..2\ti..pp.1\t\t1\r\nSpr√•kbanken\tPM.NOM\tSpr√•kbanken\t\
                Spr√•kbanken..1\tSpr√•kbanken..pm.1\t\t1\r\nfinns\tVB.PRS.SFO\tfinna\t\
                finna..1\tfinna..vb.1\t\t1\r\nunik\tJJ.POS.UTR.SIN.IND.NOM\tunik\t\
                unik..1\tunik..av.1\t\t1\r\nkompetens\tNN.UTR.SIN.IND.NOM\tkompetens\t\
                kompetens..1\tkompetens..nn.1\t\t1\r\nvad\tHP.NEU.SIN.IND\tvad\tvad..1\t\
                vad..pn.1\t\t1\r\ng√§ller\tVB.PRS.AKT\tg√§lla\tg√§lla..1\tg√§lla..vb.1\t\
                \t1\r\nparallellkorpusar\tNN.UTR.PLU.IND.NOM\t\t\t\tparallell..nn.1+korpus..nn.1\t\
                1\r\nelektroniska\tJJ.POS.UTR+NEU.PLU.IND+DEF.NOM\telektronisk\telektronisk..1\t\
                elektronisk..av.1\t\t1\r\nlexikonresurser\tNN.UTR.PLU.IND.NOM\tlexikonresurs\t\
                lexikonresurs..1\tlexikonresurs..nn.1\t\t1\r\nsamt\tKN\tsamt\tsamt..1\t\
                samt..kn.1\t\t1\r\nspr√•kteknologiska\tJJ.POS.UTR+NEU.PLU.IND+DEF.NOM\t\
                \t\t\tspr√•k..nn.1+teknologisk..av.1\t1\r\nverktyg\tNN.NEU.PLU.IND.NOM\t\
                verktyg\tverktyg..1\tverktyg..nn.1\t\t1\r\nbearbeta\tVB.INF.AKT\t\
                bearbeta\tbearbeta..1\tbearbeta..vb.1\t\t1\r\nannotera\tVB.INF.AKT\t\
                annotera\tannotera..1\tannotera..vb.1\t\t1\r\nvisa\tVB.INF.AKT\tvisa\t\
                visa..1\tvisa..vb.1\t\t1\r\nupp\tPL\tupp\tupp..1\tupp..ab.1\t\t1\r\
                \nmaterialet\tNN.NEU.SIN.DEF.NOM\tmaterial\tmaterial..1\tmaterial..nn.1\t\
                \t1\r\nmodernt\tJJ.POS.NEU.SIN.IND.NOM\tmodern\tmodern..1\tmodern..av.1\t\
                \t1\r\nmen\tKN\tmen\tmen..1\tmen..kn.1\t\t1\r\nambitionen\tNN.UTR.SIN.DEF.NOM\t\
                ambition\tambition..1\tambition..nn.1\t\t1\r\natt\tSN\tatt\tatt..1\t\
                att..sn.1\t\t1\r\nska\tVB.PRS.AKT\tskola\tskola..4\tskola..vb.2\t\t\
                1\r\navspegla\tVB.INF.AKT\tavspegla\tavspegla..1\tavspegla..vb.1\t\
                \t1\r\nhela\tJJ.POS.UTR+NEU.SIN.DEF.NOM\thel\thel..1\thel..av.1\t\t\
                1\r\nskrivna\tPC.PRF.UTR+NEU.SIN.DEF.NOM\tskriva\tskriva..1\tskriva..vb.1\t\
                \t1\r\nsvenskans\tNN.UTR.SIN.DEF.GEN\tsvenska\tsvenska..2\tsvenska..nn.1\t\
                \t1\r\nhistoria\tNN.UTR.SIN.IND.NOM\thistoria\thistoria..1\thistoria..nn.1\t\
                \t1\r\nfr√•n\tPP\tfr√•n\tfr√•n..1\tfr√•n..pp.1\t\t1\r\nmedeltida\tJJ.POS.UTR+NEU.SIN+PLU.IND+DEF.NOM\t\
                medeltida\tmedeltida..1\tmedeltida..av.1\t\t1\r\nfornsvenska\tNN.UTR.SIN.IND.NOM\t\
                \t\t\tforn..av.1+svenska..nn.1\t1\r\ntill\tPP\ttill\ttill..1\ttill..pp.1\t\
                \t1\r\nmodern\tJJ.POS.UTR.SIN.IND.NOM\tmodern\tmodern..1\tmodern..av.1\t\
                \t1\r\nsvenska\tNN.UTR.SIN.IND.NOM\tsvenska\tsvenska..1\tsvenska..nn.1\t\
                \t1\r\nmed\tPP\tmed\tmed..1\tmed..pp.1\t\t1\r\nalla\tDT.UTR+NEU.PLU.IND+DEF\t\
                all\tall..1\tall..pn.1\t\t1\r\ndess\tPS.UTR+NEU.SIN+PLU.DEF\tden\t\
                den..2\tden..pn.1\t\t1\r\ngenrer\tNN.UTR.PLU.IND.NOM\tgenre\tgenre..1\t\
                genre..nn.1\t\t1\r\nkorpusar\tNN.UTR.PLU.IND.NOM\tkorpus\tkorpus..1\t\
                korpus..nn.1\t\t1\r\nlexikon\tNN.NEU.PLU.IND.NOM\tlexikon\tlexikon..1\t\
                lexikon..nn.1\t\t1\r\nfritt\tAB.POS\tfri\tfri..2\tfri..av.1\t\t1\r\
                \n√•tkomliga\tJJ.POS.UTR+NEU.PLU.IND+DEF.NOM\t√•tkomlig\t√•tkomlig..1\t\
                √•tkomlig..av.1\t\t1\r\ns√∂kning\tNN.UTR.SIN.IND.NOM\ts√∂kning\ts√∂kning..1\t\
                s√∂kning..nn.1\t\t1\r\nvia\tPP\tvia\tvia..1\tvia..pp.1\t\t1\r\nwebbgr√§nssnitt\t\
                NN.NEU.PLU.IND.NOM\t\t\t\twebb..nn.1+gr√§nssnitt..nn.1\t1\r\np√•\tPP\t\
                p√•\tp√•..1\tp√•..pp.1\t\t1\r\ndig\tPN.UTR.SIN.DEF.OBJ\tdu\tdu..1\tdu..pn.1\t\
                \t1\r\nKan\tVB.PRS.AKT\tkunna\tkunna..1\tkunna..vb.1\t\t1\r\nvi\t\
                PN.UTR.PLU.DEF.SUB\tvi\tvi..1\tvi..pn.1\t\t1\r\nhantera\tVB.INF.AKT\t\
                hantera\thantera..1\thantera..vb.1\t\t1\r\n√∂verlappande\tPC.PRS.UTR+NEU.SIN+PLU.IND+DEF.NOM\t\
                √∂verlappa\t√∂verlappa..1\t√∂verlappa..vb.1\t\t1\r\ntaggar\tNN.UTR.PLU.IND.NOM\t\
                tagg\ttagg..1\ttagg..nn.1\t\t1\r\n?\tMAD\t\t\t\t\t1\r\nannan\tJJ.POS.UTR.SIN.IND.NOM\t\
                annan\tannan..1\tannan..pn.1\t\t1\r\ntext\tNN.UTR.SIN.IND.NOM\ttext\t\
                text..1\ttext..nn.1\t\t1\r\nj√§ttekort\tJJ.POS.UTR.SIN.IND.NOM\t\t\t\
                \tj√§tte..nn.1+kort..av.1\t1\r\nhar\tVB.PRS.AKT\tha\tha..1\tha..vb.1\t\
                \t1\r\nbara\tAB\tbara\tbara..1\tbara..ab.1\t\t1\r\ntre\tRG.NOM\ttre\t\
                tre..1\ttre..nl.1\t\t1\r\nmeningar\tNN.UTR.PLU.IND.NOM\tmening\tmening..1\t\
                mening..nn.1\t\t1\r\ningen\tDT.UTR.SIN.IND\tingen\tingen..1\tingen..pn.1\t\
                \t1\r\nmetadata\tNN.UTR.SIN.IND.NOM\tmetadata\tmetadata..1\tmetadata..nn.1\t\
                \t1\r\nPK\a\bÔøΩs.[ÔøΩ\x1D\0\0ÔøΩ\x1D\0\0PK\x03\x04\x14\0\0\0\0\0ÔøΩqbR\0\0\
                \0\0\0\0\0\0\0\0\0\0\x12\0\0\0export/xml_pretty/PK\x03\x04\n\0\b\0\
                \0\0ÔøΩjZR\0\0\0\0\0\0\0\0\0\0\0\0&\0\0\0export/xml_pretty/dokument1_export.xml<?xml\
                \ version='1.0' encoding='UTF-8'?>\n<document>\n  <text author=\"\
                Sparvutvecklare\" date=\"2020-03-11\" id=\"1\">\n    <sentence id=\"\
                b1ac\">\n      <token baseform=\"|hej|\" pos=\"IN\">Hej</token>\n\
                \      <token baseform=\"|\" pos=\"MAD\">!</token>\n    </sentence>\n\
                \    <sentence id=\"b142\">\n      <token baseform=\"|den|den h√§r|\"\
                \ pos=\"PN\">Det</token>\n      <token baseform=\"|h√§r|den h√§r:1|\"\
                \ pos=\"AB\">h√§r</token>\n      <token baseform=\"|vara|\" pos=\"\
                VB\" sentiment_label=\"neutral\">√§r</token>\n      <token baseform=\"\
                |en|\" pos=\"DT\">en</token>\n      <token baseform=\"|korpus|\" pos=\"\
                NN\">korpus</token>\n      <token baseform=\"|\" pos=\"MAD\">.</token>\n\
                \    </sentence>\n    <sentence id=\"b196\">\n      <ne ex=\"ENAMEX\"\
                \ name=\"Astrid Lindgren\" subtype=\"HUM\" type=\"PRS\">\n       \
                \ <token baseform=\"|Astrid|\" pos=\"PM\">Astrid</token>\n       \
                \ <token baseform=\"|Lindgren|\" pos=\"PM\">Lindgren</token>\n   \
                \   </ne>\n      <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"\
                neutral\">√§r</token>\n      <token baseform=\"|f√∂da|f√∂dd|\" pos=\"\
                PC\" sentiment_label=\"neutral\">f√∂dd</token>\n      <token baseform=\"\
                |i|\" pos=\"PP\">i</token>\n      <ne ex=\"ENAMEX\" name=\"Vimmerby\"\
                \ subtype=\"PPL\" type=\"LOC\">\n        <token baseform=\"|Vimmerby|\"\
                \ pos=\"PM\">Vimmerby</token>\n      </ne>\n      <ne ex=\"TIMEX\"\
                \ name=\"1907\" subtype=\"DAT\" type=\"TME\">\n        <token baseform=\"\
                |\" pos=\"RG\">1907</token>\n      </ne>\n      <token baseform=\"\
                |\" pos=\"MAD\">.</token>\n    </sentence>\n    <sentence id=\"b175\"\
                >\n      <token baseform=\"|och|\" pos=\"KN\">Och</token>\n      <token\
                \ baseform=\"|h√§r|\" pos=\"AB\">h√§r</token>\n      <token baseform=\"\
                |komma|\" pos=\"VB\" sentiment_label=\"neutral\">kommer</token>\n\
                \      <token baseform=\"|den|en|\" pos=\"DT\">den</token>\n     \
                \ <token baseform=\"|\" pos=\"RO\">tredje</token>\n      <token baseform=\"\
                |mening|\" pos=\"NN\" sentiment_label=\"neutral\">meningen</token>\n\
                \      <token baseform=\"|i|\" pos=\"PP\">i</token>\n      <token\
                \ baseform=\"|en|\" pos=\"DT\">ett</token>\n      <token baseform=\"\
                |ny|\" pos=\"JJ\" sentiment_label=\"neutral\">nytt</token>\n     \
                \ <token baseform=\"|stycke|\" pos=\"NN\" sentiment_label=\"neutral\"\
                >stycke</token>\n      <token baseform=\"|\" pos=\"MAD\">.</token>\n\
                \    </sentence>\n    <sentence id=\"b16a\">\n      <token baseform=\"\
                |sista|\" pos=\"JJ\" sentiment_label=\"neutral\">Sista</token>\n \
                \     <token baseform=\"|mening|\" pos=\"NN\" sentiment_label=\"neutral\"\
                >meningen</token>\n      <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"\
                neutral\">√§r</token>\n      <token baseform=\"|kort|\" pos=\"JJ\"\
                \ sentiment_label=\"neutral\">kort</token>\n      <token baseform=\"\
                |och|\" pos=\"KN\">och</token>\n      <token baseform=\"|inneh√•lla|\"\
                \ pos=\"VB\" sentiment_label=\"neutral\">inneh√•ller</token>\n    \
                \  <token baseform=\"|en|\" pos=\"DT\">en</token>\n      <token baseform=\"\
                |\" pos=\"NN\">sammans√§ttningsform</token>\n      <token baseform=\"\
                |\" pos=\"MID\">:</token>\n      <token baseform=\"|f√∂delsedagskalas|\"\
                \ pos=\"NN\">f√∂delsedagskalas</token>\n      <token baseform=\"|\"\
                \ pos=\"MAD\">.</token>\n    </sentence>\n  </text>\n  <text author=\"\
                Wikipedia\" date=\"2020-03-16\" id=\"2\">\n    <sentence id=\"b110\"\
                >\n      <token baseform=\"|spr√•kbank|\" pos=\"NN\">Spr√•kbanken</token>\n\
                \      <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"neutral\"\
                >√§r</token>\n      <token baseform=\"|en|\" pos=\"DT\">en</token>\n\
                \      <token baseform=\"|\" pos=\"NN\">forskningsenhet</token>\n\
                \      <token baseform=\"|vid|\" pos=\"PP\">vid</token>\n      <ne\
                \ ex=\"ENAMEX\" name=\"G√∂teborgs universitet\" subtype=\"EDU\" type=\"\
                ORG\">\n        <token baseform=\"|G√∂teborg|G√∂teborgs universitet|\"\
                \ pos=\"PM\">G√∂teborgs</token>\n        <token baseform=\"|universitet|G√∂teborgs\
                \ universitet:6|\" pos=\"NN\">universitet</token>\n      </ne>\n \
                \     <token baseform=\"|\" pos=\"MAD\">.</token>\n    </sentence>\n\
                \    <sentence id=\"b122\">\n      <token baseform=\"|den|\" pos=\"\
                PN\">Den</token>\n      <token baseform=\"|inr√§tta|\" pos=\"VB\" sentiment_label=\"\
                neutral\">inr√§ttades</token>\n      <token baseform=\"|\" pos=\"KN\"\
                >som</token>\n      <token baseform=\"|en|\" pos=\"DT\">en</token>\n\
                \      <token baseform=\"|nationell|\" pos=\"JJ\" sentiment_label=\"\
                neutral\">nationell</token>\n      <token baseform=\"|resurs|\" pos=\"\
                NN\" sentiment_label=\"positive\">resurs</token>\n      <token baseform=\"\
                |\" pos=\"RG\">1975</token>\n      <token baseform=\"|\" pos=\"MID\"\
                >,</token>\n      <token baseform=\"|\" pos=\"KN\">som</token>\n \
                \     <token baseform=\"|en|\" pos=\"DT\">ett</token>\n      <token\
                \ baseform=\"|direkt|\" pos=\"JJ\" sentiment_label=\"neutral\">direkt</token>\n\
                \      <token baseform=\"|resultat|\" pos=\"NN\" sentiment_label=\"\
                neutral\">resultat</token>\n      <token baseform=\"|av|\" pos=\"\
                PP\">av</token>\n      <ne ex=\"ENAMEX\" name=\"Sture All√©ns\" subtype=\"\
                HUM\" type=\"PRS\">\n        <token baseform=\"|Sture|\" pos=\"PM\"\
                >Sture</token>\n        <token baseform=\"|\" pos=\"PM\">All√©ns</token>\n\
                \      </ne>\n      <token baseform=\"|\" pos=\"NN\">pionj√§rinsatser</token>\n\
                \      <token baseform=\"|inom|\" pos=\"PP\">inom</token>\n      <token\
                \ baseform=\"|svensk|\" pos=\"JJ\" sentiment_label=\"neutral\">svensk</token>\n\
                \      <token baseform=\"|korpuslingvistik|\" pos=\"NN\">korpuslingvistik</token>\n\
                \      <ne ex=\"TIMEX\" name=\"under 1960-talet\" subtype=\"DAT\"\
                \ type=\"TME\">\n        <token baseform=\"|under|\" pos=\"PP\">under</token>\n\
                \        <token baseform=\"|1960-tal|\" pos=\"NN\">1960-talet</token>\n\
                \      </ne>\n      <token baseform=\"|\" pos=\"MAD\">.</token>\n\
                \    </sentence>\n    <sentence id=\"b1c1\">\n      <token baseform=\"\
                |spr√•kbank|\" pos=\"NN\">Spr√•kbankens</token>\n      <token baseform=\"\
                |uppdrag|\" pos=\"NN\" sentiment_label=\"neutral\">uppdrag</token>\n\
                \      <token baseform=\"|bli|\" pos=\"VB\" sentiment_label=\"neutral\"\
                >blev</token>\n      <token baseform=\"|och|\" pos=\"KN\">och</token>\n\
                \      <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"neutral\"\
                >√§r</token>\n      <token baseform=\"|fortfarande|\" pos=\"AB\">fortfarande</token>\n\
                \      <token baseform=\"|att|\" pos=\"IE\">att</token>\n      <token\
                \ baseform=\"|samla|\" pos=\"VB\" sentiment_label=\"neutral\">samla</token>\n\
                \      <token baseform=\"|in|\" pos=\"PL\">in</token>\n      <token\
                \ baseform=\"|\" pos=\"MID\">,</token>\n      <token baseform=\"|f√∂r√§dla|\"\
                \ pos=\"VB\">f√∂r√§dla</token>\n      <token baseform=\"|och|\" pos=\"\
                KN\">och</token>\n      <token baseform=\"|tillg√§ngligg√∂ra|\" pos=\"\
                VB\">tillg√§ngligg√∂ra</token>\n      <token baseform=\"|spr√•kresurs|\"\
                \ pos=\"NN\">spr√•kresurser</token>\n      <token baseform=\"|√•t|\"\
                \ pos=\"PP\">√•t</token>\n      <token baseform=\"|forskare|\" pos=\"\
                NN\" sentiment_label=\"neutral\">forskare</token>\n      <token baseform=\"\
                |och|\" pos=\"KN\">och</token>\n      <token baseform=\"|allm√§nhet|\"\
                \ pos=\"NN\" sentiment_label=\"neutral\">allm√§nheten</token>\n   \
                \   <token baseform=\"|\" pos=\"MID\">,</token>\n      <token baseform=\"\
                |och|\" pos=\"KN\">och</token>\n      <token baseform=\"|att|\" pos=\"\
                IE\">att</token>\n      <token baseform=\"|bedriva|\" pos=\"VB\" sentiment_label=\"\
                neutral\">bedriva</token>\n      <token baseform=\"|forskning|\" pos=\"\
                NN\" sentiment_label=\"neutral\">forskning</token>\n      <token baseform=\"\
                |och|\" pos=\"KN\">och</token>\n      <token baseform=\"|utveckling|\"\
                \ pos=\"NN\" sentiment_label=\"neutral\">utveckling</token>\n    \
                \  <token baseform=\"|\" pos=\"HP\">som</token>\n      <token baseform=\"\
                |fr√§mja|\" pos=\"VB\" sentiment_label=\"positive\">fr√§mjar</token>\n\
                \      <token baseform=\"|s√•n|\" pos=\"JJ\">s√•n</token>\n      <token\
                \ baseform=\"|anv√§ndning|\" pos=\"NN\" sentiment_label=\"neutral\"\
                >anv√§ndning</token>\n      <token baseform=\"|\" pos=\"MAD\">.</token>\n\
                \    </sentence>\n    <sentence id=\"b1cd\">\n      <token baseform=\"\
                |i|\" pos=\"PP\">I</token>\n      <token baseform=\"|Spr√•kbanken|\"\
                \ pos=\"PM\">Spr√•kbanken</token>\n      <token baseform=\"|finna|finnas|\"\
                \ pos=\"VB\" sentiment_label=\"neutral\">finns</token>\n      <token\
                \ baseform=\"|en|\" pos=\"DT\">en</token>\n      <token baseform=\"\
                |unik|\" pos=\"JJ\" sentiment_label=\"neutral\">unik</token>\n   \
                \   <token baseform=\"|kompetens|\" pos=\"NN\" sentiment_label=\"\
                positive\">kompetens</token>\n      <token baseform=\"|vad|vad f√∂r|\"\
                \ pos=\"HP\">vad</token>\n      <token baseform=\"|g√§lla|\" pos=\"\
                VB\" sentiment_label=\"neutral\">g√§ller</token>\n      <token baseform=\"\
                |svensk|\" pos=\"JJ\" sentiment_label=\"neutral\">svenska</token>\n\
                \      <token baseform=\"|textkorpus|\" pos=\"NN\">textkorpusar</token>\n\
                \      <token baseform=\"|\" pos=\"MID\">,</token>\n      <token baseform=\"\
                |\" pos=\"NN\">parallellkorpusar</token>\n      <token baseform=\"\
                |\" pos=\"MID\">,</token>\n      <token baseform=\"|svensk|\" pos=\"\
                JJ\" sentiment_label=\"neutral\">svenska</token>\n      <token baseform=\"\
                |elektronisk|\" pos=\"JJ\" sentiment_label=\"neutral\">elektroniska</token>\n\
                \      <token baseform=\"|lexikonresurs|\" pos=\"NN\">lexikonresurser</token>\n\
                \      <token baseform=\"|samt|\" pos=\"KN\">samt</token>\n      <token\
                \ baseform=\"|\" pos=\"JJ\">spr√•kteknologiska</token>\n      <token\
                \ baseform=\"|verktyg|\" pos=\"NN\">verktyg</token>\n      <token\
                \ baseform=\"|f√∂r|vad f√∂r:7|\" pos=\"PP\">f√∂r</token>\n      <token\
                \ baseform=\"|att|\" pos=\"IE\">att</token>\n      <token baseform=\"\
                |bearbeta|\" pos=\"VB\">bearbeta</token>\n      <token baseform=\"\
                |\" pos=\"MID\">,</token>\n      <token baseform=\"|annotera|\" pos=\"\
                VB\">annotera</token>\n      <token baseform=\"|och|\" pos=\"KN\"\
                >och</token>\n      <token baseform=\"|visa|visa upp|\" pos=\"VB\"\
                \ sentiment_label=\"neutral\">visa</token>\n      <token baseform=\"\
                |upp|visa upp:26|\" pos=\"PL\">upp</token>\n      <token baseform=\"\
                |textkorpus|\" pos=\"NN\">textkorpusar</token>\n      <token baseform=\"\
                |\" pos=\"MAD\">.</token>\n    </sentence>\n    <sentence id=\"b15f\"\
                >\n      <token baseform=\"|huvuddel|\" pos=\"NN\">Huvuddelen</token>\n\
                \      <token baseform=\"|av|\" pos=\"PP\">av</token>\n      <token\
                \ baseform=\"|material|\" pos=\"NN\" sentiment_label=\"neutral\">materialet</token>\n\
                \      <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"neutral\"\
                >√§r</token>\n      <token baseform=\"|modern|\" pos=\"JJ\" sentiment_label=\"\
                positive\">modernt</token>\n      <token baseform=\"|\" pos=\"MID\"\
                >,</token>\n      <token baseform=\"|men|\" pos=\"KN\">men</token>\n\
                \      <token baseform=\"|ambition|\" pos=\"NN\" sentiment_label=\"\
                neutral\">ambitionen</token>\n      <token baseform=\"|vara|\" pos=\"\
                VB\" sentiment_label=\"neutral\">√§r</token>\n      <token baseform=\"\
                |att|\" pos=\"SN\">att</token>\n      <token baseform=\"|resurs|\"\
                \ pos=\"NN\" sentiment_label=\"positive\">resurserna</token>\n   \
                \   <token baseform=\"|skola|\" pos=\"VB\" sentiment_label=\"neutral\"\
                >ska</token>\n      <token baseform=\"|avspegla|\" pos=\"VB\">avspegla</token>\n\
                \      <token baseform=\"|hel|\" pos=\"JJ\" sentiment_label=\"neutral\"\
                >hela</token>\n      <token baseform=\"|den|en|\" pos=\"DT\">den</token>\n\
                \      <token baseform=\"|skriva|\" pos=\"PC\" sentiment_label=\"\
                neutral\">skrivna</token>\n      <token baseform=\"|svenska|\" pos=\"\
                NN\" sentiment_label=\"neutral\">svenskans</token>\n      <token baseform=\"\
                |historia|\" pos=\"NN\" sentiment_label=\"neutral\">historia</token>\n\
                \      <token baseform=\"|\" pos=\"MID\">-</token>\n      <token baseform=\"\
                |fr√•n|\" pos=\"PP\">fr√•n</token>\n      <token baseform=\"|medeltida|\"\
                \ pos=\"JJ\">medeltida</token>\n      <token baseform=\"|\" pos=\"\
                NN\">fornsvenska</token>\n      <token baseform=\"|till|\" pos=\"\
                PP\">till</token>\n      <token baseform=\"|modern|\" pos=\"JJ\" sentiment_label=\"\
                positive\">modern</token>\n      <token baseform=\"|svenska|\" pos=\"\
                NN\" sentiment_label=\"neutral\">svenska</token>\n      <token baseform=\"\
                |\" pos=\"MID\">-</token>\n      <token baseform=\"|med|\" pos=\"\
                PP\">med</token>\n      <token baseform=\"|all|\" pos=\"DT\">alla</token>\n\
                \      <token baseform=\"|den|\" pos=\"PS\">dess</token>\n      <token\
                \ baseform=\"|genre|\" pos=\"NN\">genrer</token>\n      <token baseform=\"\
                |\" pos=\"MAD\">.</token>\n    </sentence>\n    <sentence id=\"b13b\"\
                >\n      <token baseform=\"|huvuddel|\" pos=\"NN\">Huvuddelen</token>\n\
                \      <token baseform=\"|av|\" pos=\"PP\">av</token>\n      <token\
                \ baseform=\"|resurs|\" pos=\"NN\" sentiment_label=\"positive\">resurserna</token>\n\
                \      <token baseform=\"|\" pos=\"MID\">,</token>\n      <token baseform=\"\
                |korpus|\" pos=\"NN\">korpusar</token>\n      <token baseform=\"|och|\"\
                \ pos=\"KN\">och</token>\n      <token baseform=\"|lexikon|\" pos=\"\
                NN\">lexikon</token>\n      <token baseform=\"|\" pos=\"MID\">,</token>\n\
                \      <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"neutral\"\
                >√§r</token>\n      <token baseform=\"|fri|\" pos=\"AB\" sentiment_label=\"\
                positive\">fritt</token>\n      <token baseform=\"|√•tkomlig|\" pos=\"\
                JJ\">√•tkomliga</token>\n      <token baseform=\"|f√∂r|\" pos=\"PP\"\
                >f√∂r</token>\n      <token baseform=\"|s√∂kning|\" pos=\"NN\">s√∂kning</token>\n\
                \      <token baseform=\"|via|\" pos=\"PP\">via</token>\n      <token\
                \ baseform=\"|\" pos=\"NN\">webbgr√§nssnitt</token>\n      <token baseform=\"\
                |\" pos=\"MAD\">.</token>\n    </sentence>\n  </text>\n  <text id=\"\
                1\">\n    <sentence id=\"b100\">\n      <token baseform=\"|hej|\"\
                \ pos=\"IN\">Hej</token>\n      <i sparv.overlap=\"b1-1\">\n     \
                \   <token baseform=\"|p√•|\" pos=\"PP\">p√•</token>\n        <token\
                \ baseform=\"|du|\" pos=\"PN\">dig</token>\n        <token baseform=\"\
                |\" pos=\"MAD\">.</token>\n      </i>\n    </sentence>\n    <i sparv.overlap=\"\
                b1-1\">\n      <sentence id=\"b1f4\" sparv.overlap=\"b1-2\">\n   \
                \     <token baseform=\"|kunna|\" pos=\"VB\" sentiment_label=\"neutral\"\
                >Kan</token>\n        <token baseform=\"|vi|\" pos=\"PN\">vi</token>\n\
                \      </sentence>\n    </i>\n    <sentence id=\"b1f4\" sparv.overlap=\"\
                b1-2\">\n      <token baseform=\"|hantera|\" pos=\"VB\" sentiment_label=\"\
                neutral\">hantera</token>\n      <token baseform=\"|√∂verlappa|\" pos=\"\
                PC\">√∂verlappande</token>\n      <token baseform=\"|tagg|\" pos=\"\
                NN\">taggar</token>\n      <token baseform=\"|\" pos=\"MAD\">?</token>\n\
                \    </sentence>\n  </text>\n</document>\nPK\a\bu:ÔøΩÔøΩ[3\0\0[3\0\0PK\x03\
                \x04\n\0\b\0\0\0ÔøΩkZR\0\0\0\0\0\0\0\0\0\0\0\0&\0\0\0export/xml_pretty/dokument2_export.xml<?xml\
                \ version='1.0' encoding='UTF-8'?>\n<text>\n  <sentence id=\"e00a\"\
                >\n    <token baseform=\"|hej|\" pos=\"IN\">Hej</token>\n    <token\
                \ baseform=\"|\" pos=\"MAD\">!</token>\n  </sentence>\n  <sentence\
                \ id=\"e089\">\n    <token baseform=\"|den|den h√§r|\" pos=\"PN\">Det</token>\n\
                \    <token baseform=\"|h√§r|den h√§r:1|\" pos=\"AB\">h√§r</token>\n\
                \    <token baseform=\"|vara|\" pos=\"VB\" sentiment_label=\"neutral\"\
                >√§r</token>\n    <token baseform=\"|en|en annan|\" pos=\"DT\">en</token>\n\
                \    <token baseform=\"|annan|en annan:4|\" pos=\"JJ\">annan</token>\n\
                \    <token baseform=\"|text|\" pos=\"NN\" sentiment_label=\"neutral\"\
                >text</token>\n    <token baseform=\"|\" pos=\"MAD\">.</token>\n \
                \ </sentence>\n  <sentence id=\"e0b6\">\n    <token baseform=\"|den|\"\
                \ pos=\"PN\">Den</token>\n    <token baseform=\"|vara|\" pos=\"VB\"\
                \ sentiment_label=\"neutral\">√§r</token>\n    <token baseform=\"|\"\
                \ pos=\"JJ\">j√§ttekort</token>\n    <token baseform=\"|\" pos=\"MAD\"\
                >.</token>\n  </sentence>\n  <sentence id=\"e0be\">\n    <token baseform=\"\
                |den|\" pos=\"PN\">Den</token>\n    <token baseform=\"|ha|\" pos=\"\
                VB\" sentiment_label=\"neutral\">har</token>\n    <token baseform=\"\
                |bara|\" pos=\"AB\">bara</token>\n    <token baseform=\"|tre|\" pos=\"\
                RG\">tre</token>\n    <token baseform=\"|mening|\" pos=\"NN\" sentiment_label=\"\
                neutral\">meningar</token>\n    <token baseform=\"|och|\" pos=\"KN\"\
                >och</token>\n    <token baseform=\"|ingen|\" pos=\"DT\">ingen</token>\n\
                \    <token baseform=\"|metadata|\" pos=\"NN\">metadata</token>\n\
                \    <token baseform=\"|\" pos=\"MAD\">.</token>\n  </sentence>\n\
                </text>\nPK\a\b\b+ÔøΩ&ÔøΩ\x05\0\0ÔøΩ\x05\0\0PK\x01\x02-\x03\x14\0\0\0\0\0\
                ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\a\0\0\0\0\0\0\0\0\0\x10\0ÔøΩA\0\0\0\0export/PK\x01\
                \x02-\x03\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\v\0\0\0\0\0\0\0\
                \0\0\x10\0ÔøΩA%\0\0\0export/csv/PK\x01\x02-\x03\n\0\b\0\0\0ÔøΩjZRYÔøΩ\"\
                ÔøΩÔøΩ\x12\0\0ÔøΩ\x12\0\0\x18\0\0\0\0\0\0\0\0\0\0\0ÔøΩÔøΩN\0\0\0export/csv/dokument1.csvPK\x01\
                \x02-\x03\n\0\b\0\0\0ÔøΩkZRÔøΩ7√æ\x0E\x02\0\0\x0E\x02\0\0\x18\0\0\0\0\0\
                \0\0\0\0\0\0ÔøΩÔøΩ]\x13\0\0export/csv/dokument2.csvPK\x01\x02-\x03\x14\
                \0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\x16\0\0\0\0\0\0\0\0\0\x10\0\
                ÔøΩAÔøΩ\x15\0\0export/frequency_list/PK\x01\x02-\x03\n\0\b\0\0\0ÔøΩkZRÔøΩs.[ÔøΩ\x1D\
                \0\0ÔøΩ\x1D\0\0(\0\0\0\0\0\0\0\0\0\0\0ÔøΩÔøΩÔøΩ\x15\0\0export/frequency_list/stats_mini-swe.csvPK\x01\
                \x02-\x03\x14\0\0\0\0\0ÔøΩqbR\0\0\0\0\0\0\0\0\0\0\0\0\x12\0\0\0\0\0\0\
                \0\0\0\x10\0ÔøΩA44\0\0export/xml_pretty/PK\x01\x02-\x03\n\0\b\0\0\0\
                ÔøΩjZRu:ÔøΩÔøΩ[3\0\0[3\0\0&\0\0\0\0\0\0\0\0\0\0\0ÔøΩÔøΩd4\0\0export/xml_pretty/dokument1_export.xmlPK\x01\
                \x02-\x03\n\0\b\0\0\0ÔøΩkZR\b+ÔøΩ&ÔøΩ\x05\0\0ÔøΩ\x05\0\0&\0\0\0\0\0\0\0\0\0\
                \0\0ÔøΩÔøΩ\x13h\0\0export/xml_pretty/dokument2_export.xmlPK\x05\x06\0\0\
                \0\0\t\0\t\0|\x02\0\0\x1Fn\0\0\0\0"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to download exports for corpus 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: failed_downloading_exports
              example:
                status: error
                message: Failed to download exports for corpus 'mink-dxh6e6wtff'
                return_code: failed_downloading_exports
      deprecated: false
      security: []
  /remove-exports:
    delete:
      tags:
      - Manage Exports
      summary: remove exports
      description: 'Removes all export files for the corpus from the storage server.
        Will attempt to remove exports from the Sparv server, too, but won''t crash
        if this fails.


        ### Example


        ```.bash

        curl -X DELETE ''{{host}}/remove-exports?corpus_id=some_corpus_name'' -H ''Authorization:
        Bearer YOUR_JWT''

        ```'
      operationId: removeexports
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Export files for corpus 'mink-dxh6e6wtff' successfully
                      removed
                  return_code:
                    type: string
                    example: removed_exports
              example:
                status: success
                message: Export files for corpus 'mink-dxh6e6wtff' successfully removed
                return_code: removed_exports
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Corpus 'mink-dxh6e6wtfg' does not exist or you do not
                      have access to it
                  return_code:
                    type: string
                    example: corpus_not_found
              example:
                status: error
                message: Corpus 'mink-dxh6e6wtfg' does not exist or you do not have
                  access to it
                return_code: corpus_not_found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to remove export files from storage server for
                      corpus 'mink-dxh6e6wtff'
                  return_code:
                    type: string
                    example: failed_removing_exports_storage
              example:
                status: error
                message: Failed to remove export files from storage server for corpus
                  'mink-dxh6e6wtff'
                return_code: failed_removing_exports_storage
      deprecated: false
  /download-source-text:
    get:
      tags:
      - Manage Exports
      summary: download source text
      description: "Downloads one of the source files in plain text. The plain text\
        \ is extracted by Sparv and therefore it can only be requested after a completed\
        \ Sparv job. \n    \nThe source file name (including its file extension) must\
        \ be specified in the `file` parameter.\n\n### Example\n\n```.bash\ncurl -X\
        \ GET '{{host}}/download-source-text?corpus_id=some_corpus_name?file=dokument1.xml'\
        \ -H 'Authorization: Bearer YOUR_JWT' --output dokument1_plain.txt\n```"
      operationId: downloadsourcetext
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: mink-dxh6e6wtff
      - name: file
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: dokument1.xml
      responses:
        '200':
          description: OK
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
                example: '

                  Hej! Det h√§r √§r en text.


                  Den √§r j√§ttekort. Den har bara tre meningar och ingen metadata.

                  '
              example: '

                Hej! Det h√§r √§r en text.


                Den √§r j√§ttekort. Den har bara tre meningar och ingen metadata.

                '
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: No source file specified for download
                  return_code:
                    type: string
                    example: missing_sources_download_text
              example:
                status: error
                message: No source file specified for download
                return_code: missing_sources_download_text
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: There are currently no source texts for corpus 'mink-dxh6e6wtff'.
                      You must run Sparv before you can view source texts.
                  return_code:
                    type: string
                    example: no_source_texts_run_sparv
              example:
                status: error
                message: There are currently no source texts for corpus 'mink-dxh6e6wtff'.
                  You must run Sparv before you can view source texts.
                return_code: no_source_texts_run_sparv
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to download source text
                  return_code:
                    type: string
                    example: failed_downloading_source_text
              example:
                status: error
                message: Failed to download source text
                return_code: failed_downloading_source_text
      deprecated: false
  /create-metadata:
    post:
      tags:
      - Manage Metadata
      summary: create metadata
      description: 'Creates a new metadata resource on the storage server.


        A `public_id` must be supplied, containing the correct organization prefix
        for the user making the request.


        ### Example


        ```.bash

        curl -X GET ''{{host}}/create-metadata?public_id={{standard-metadata-resource-public}}''
        -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: createmetadata
      parameters:
      - name: public_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '{{standard-metadata-resource-public}}'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Resource 'sbx-testcorpus' created successfully
                  resource_id:
                    type: string
                    example: sbx-testcorpus
                  return_code:
                    type: string
                    example: created_resource
              example:
                status: success
                message: Resource 'sbx-testcorpus' created successfully
                resource_id: sbx-testcorpus
                return_code: created_resource
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
      deprecated: false
  /remove-metadata:
    delete:
      tags:
      - Manage Metadata
      summary: remove metadata
      description: 'Removes a metadata resource from the storage server.


        ### Example


        ```.bash

        curl -X DELETE ''{{host}}/remove-metadata?corpus_id={{standard-metadata-resource-internal}}''
        -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: removemetadata
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '{{standard-metadata-resource-internal}}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Corpus 'sbx-testcorpus' successfully removed
                  return_code:
                    type: string
                    example: removed_corpus
              example:
                status: success
                message: Corpus 'sbx-testcorpus' successfully removed
                return_code: removed_corpus
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
      deprecated: false
  /upload-metadata-yaml:
    put:
      tags:
      - Manage Metadata
      summary: upload metadata yaml
      description: 'Uploads a metadata yaml file, either as a file or as plain text
        with the `yaml` parameter. The metadata must be in yaml format.


        If a metadata file already exists for the given corpus it will be replaced
        by the newly uploaded one.


        Please note that any yaml comments may be removed from your config upon upload.


        ### Example


        ```.bash

        curl -X PUT -F "files[]=@/absolute/path/to/metadata.yaml" ''{{host}}/upload-metadata-yaml?corpus_id={{standard-metadata-resource-internal}}''
        -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: uploadmetadatayaml
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '{{standard-metadata-resource-internal}}'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Metadata file successfully uploaded for 'mink-bizr4dbldx'
                  return_code:
                    type: string
                    example: uploaded_yaml
              example:
                status: success
                message: Metadata file successfully uploaded for 'mink-bizr4dbldx'
                return_code: uploaded_yaml
        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: No metadata file provided for upload
                  return_code:
                    type: string
                    example: missing_metadata_upload
              example:
                status: error
                message: No metadata file provided for upload
                return_code: missing_metadata_upload
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
      deprecated: false
  /download-metadata-yaml:
    get:
      tags:
      - Manage Metadata
      summary: download metadata yaml
      description: 'Downloads the metadata yaml file.


        ### Example


        ```.bash

        curl -X GET ''{{host}}/download-metadata-yaml?corpus_id={{standard-metadata-resource-internal}}''
        -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: downloadmetadatayaml
      parameters:
      - name: corpus_id
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: '{{standard-metadata-resource-internal}}'
      responses:
        '200':
          description: OK
          content:
            text/yaml; charset=utf-8:
              schema:
                type: string
                example: "name:\n  swe: 8 Sidor\n  eng: 8 Sidor\nshort_description:\n\
                  \  swe: Nyhetsartiklar fr√•n 8 SIDOR.\n  eng: News articles from\
                  \ 8 SIDOR.\ntype: corpus\ntrainingdata: false\nunlisted: false\n\
                  successors: []\nlanguage_codes:\n- swe\nsize:\n  tokens: 4812579\n\
                  \  sentences: 450335\nin_collections: []\ndownloads:\n- url: https://spraakbanken.gu.se/lb/resurser/meningsmangder/attasidor.xml.bz2\n\
                  \  type: corpus\n  format: XML\n  info: this file contains a scrambled\
                  \ version of the corpus\n  licence: CC BY 4.0\n  restriction: attribution\n\
                  - url: https://svn.spraakdata.gu.se/sb-arkiv/pub/frekvens/stats_attasidor.csv\n\
                  \  type: token frequencies\n  format: CSV\n  info: ''\n  licence:\
                  \ CC BY 4.0\n  restriction: attribution\ninterface:\n- access: https://spraakbanken.gu.se/korp/#?corpus=attasidor\n\
                  \  licence: CC BY 4.0\n  restriction: attribution\ncontact_info:\n\
                  \  name: Markus Forsberg\n  email: sb-info@svenska.gu.se\n  affiliation:\n\
                  \    organisation: Spr√•kbanken\n    email: sb-info@svenska.gu.se\n\
                  annotation:\n  swe: ''\n  eng: ''\nkeywords: []\ncaveats:\n  swe:\
                  \ ''\n  eng: ''\nreferences: []\nintended_uses:\n  swe: ''\n  eng:\
                  \ ''\ndescription:\n  swe: '<p>8 Sidor √§r en nyhetstidning p√• l√§ttl√§st\
                  \ svenska. Texterna i korpusen √§r\n\n    extraherade fr√•n <a href=\"\
                  https://8sidor.se/\">8sidor.se</a>.</p>\n\n    <p>Tidningen utkommer\
                  \ en g√•ng i veckan, p√• onsdagar. Upplagan √§r omkring 9\n\n    500\
                  \ exemplar. L√§sarunders√∂kningar visar att varje nummer har omkring\
                  \ 100\n\n    000 l√§sare, j√§mnt f√∂rdelade √∂ver Sverige. De som l√§ser\
                  \ 8 Sidor √§r elever\n\n    i grundskolan, vuxenutbildning, personer\
                  \ med\n\n    intellektuellt funktionshinder, invandrare och m√•nga\
                  \ andra m√§nniskor som\n\n    har sv√•rt att l√§sa en vanlig dagstidning.\
                  \ 8 Sidor var till 2015 en del av\n\n    Centrum f√∂r l√§ttl√§st, d√§refter\
                  \ Myndigheten f√∂r tillg√§ngliga medier och\n\n    erh√•ller ekonomiskt\
                  \ st√∂d fr√•n kulturdepartementet. (Denna beskrivning √§r\n\n    h√§mtad\
                  \ fr√•n <a href=\"https://sv.wikipedia.org/wiki/8_Sidor\">Wikipedia</a>)</p>'\n"
              example: "name:\n  swe: 8 Sidor\n  eng: 8 Sidor\nshort_description:\n\
                \  swe: Nyhetsartiklar fr√•n 8 SIDOR.\n  eng: News articles from 8\
                \ SIDOR.\ntype: corpus\ntrainingdata: false\nunlisted: false\nsuccessors:\
                \ []\nlanguage_codes:\n- swe\nsize:\n  tokens: 4812579\n  sentences:\
                \ 450335\nin_collections: []\ndownloads:\n- url: https://spraakbanken.gu.se/lb/resurser/meningsmangder/attasidor.xml.bz2\n\
                \  type: corpus\n  format: XML\n  info: this file contains a scrambled\
                \ version of the corpus\n  licence: CC BY 4.0\n  restriction: attribution\n\
                - url: https://svn.spraakdata.gu.se/sb-arkiv/pub/frekvens/stats_attasidor.csv\n\
                \  type: token frequencies\n  format: CSV\n  info: ''\n  licence:\
                \ CC BY 4.0\n  restriction: attribution\ninterface:\n- access: https://spraakbanken.gu.se/korp/#?corpus=attasidor\n\
                \  licence: CC BY 4.0\n  restriction: attribution\ncontact_info:\n\
                \  name: Markus Forsberg\n  email: sb-info@svenska.gu.se\n  affiliation:\n\
                \    organisation: Spr√•kbanken\n    email: sb-info@svenska.gu.se\n\
                annotation:\n  swe: ''\n  eng: ''\nkeywords: []\ncaveats:\n  swe:\
                \ ''\n  eng: ''\nreferences: []\nintended_uses:\n  swe: ''\n  eng:\
                \ ''\ndescription:\n  swe: '<p>8 Sidor √§r en nyhetstidning p√• l√§ttl√§st\
                \ svenska. Texterna i korpusen √§r\n\n    extraherade fr√•n <a href=\"\
                https://8sidor.se/\">8sidor.se</a>.</p>\n\n    <p>Tidningen utkommer\
                \ en g√•ng i veckan, p√• onsdagar. Upplagan √§r omkring 9\n\n    500\
                \ exemplar. L√§sarunders√∂kningar visar att varje nummer har omkring\
                \ 100\n\n    000 l√§sare, j√§mnt f√∂rdelade √∂ver Sverige. De som l√§ser\
                \ 8 Sidor √§r elever\n\n    i grundskolan, vuxenutbildning, personer\
                \ med\n\n    intellektuellt funktionshinder, invandrare och m√•nga\
                \ andra m√§nniskor som\n\n    har sv√•rt att l√§sa en vanlig dagstidning.\
                \ 8 Sidor var till 2015 en del av\n\n    Centrum f√∂r l√§ttl√§st, d√§refter\
                \ Myndigheten f√∂r tillg√§ngliga medier och\n\n    erh√•ller ekonomiskt\
                \ st√∂d fr√•n kulturdepartementet. (Denna beskrivning √§r\n\n    h√§mtad\
                \ fr√•n <a href=\"https://sv.wikipedia.org/wiki/8_Sidor\">Wikipedia</a>)</p>'\n"
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
      deprecated: false
  /admin-mode-on:
    post:
      tags:
      - Admin Mode
      summary: admin mode on
      description: 'Turns on admin mode for the user if the user can be verified as
        a Mink admin in the authentication system. When admin mode is activated the
        user will have full access to all corpora in Mink.


        This works by setting a session cookie in the client. Admin mode will be activated
        until <a href="#operation/adminmodeoff">turned off</a> or until the session
        expires.


        ### Example


        ```.bash

        curl -X POST ''{{host}}/admin-mode-on'' -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: adminmodeon
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Admin mode turned on
                  return_code:
                    type: string
                    example: admin_on
              example:
                status: success
                message: Admin mode turned on
                return_code: admin_on
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Mink admin status could not be confirmed
                  return_code:
                    type: string
                    example: not_admin
              example:
                status: error
                message: Mink admin status could not be confirmed
                return_code: not_admin
      deprecated: false
  /admin-mode-off:
    post:
      tags:
      - Admin Mode
      summary: admin mode off
      description: 'Turns off admin mode for the user by removing the session cookie
        from the client.


        ### Example


        ```.bash

        curl -X POST ''{{host}}/admin-mode-off'' -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: adminmodeoff
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Admin mode turned off
                  return_code:
                    type: string
                    example: admin_off
              example:
                status: success
                message: Admin mode turned off
                return_code: admin_off
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
      deprecated: false
  /admin-mode-status:
    get:
      tags:
      - Admin Mode
      summary: admin mode status
      description: 'Checks whether admin mode is turned on or off.


        ### Example


        ```.bash

        curl -X GET ''{{host}}/admin-mode-status'' -H ''Authorization: Bearer YOUR_JWT''

        ```'
      operationId: adminmodestatus
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Returning status of admin mode
                  admin_mode_status:
                    type: integer
                    example: true
                  return_code:
                    type: string
                    example: returning_admin_status
              example:
                status: success
                message: Returning status of admin mode
                admin_mode_status: true
                return_code: returning_admin_status
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to authenticate
                  info:
                    type: string
                    example: Signature verification failed
                  return_code:
                    type: string
                    example: failed_authenticating
              example:
                status: error
                message: Failed to authenticate
                info: Signature verification failed
                return_code: failed_authenticating
      deprecated: false
  /api-spec:
    get:
      tags:
      - Documentation
      summary: API specification
      description: Gets the open API specification (in json format) for this API.
      operationId: APIspecification
      parameters: []
      responses:
        '200':
          description: ''
      deprecated: false
      security: []
  /api-doc:
    get:
      tags:
      - Documentation
      summary: API documentation
      description: Renders the API documentation in html.
      operationId: APIdocumentation
      parameters: []
      responses:
        '200':
          description: ''
      deprecated: false
      security: []
  /info:
    get:
      tags:
      - Documentation
      summary: API info
      description: Show info about data processing, e.g. job status codes, file size
        limits and Sparv importer modules.
      operationId: APIinfo
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Listing information about data processing
                  status_codes:
                    type: object
                    example: &id020
                      info: job status codes
                      data:
                      - name: none
                        description: Process does not exist
                      - name: waiting
                        description: Waiting to be processed
                      - name: running
                        description: Process is running
                      - name: done
                        description: Process has finished
                      - name: error
                        description: An error occurred in the process
                      - name: aborted
                        description: Process was aborted by the user
                  importer_modules:
                    type: object
                    example: &id021
                      info: Sparv importers that need to be used for different file
                        extensions
                      data:
                      - file_extension: .xml
                        importer: xml_import
                      - file_extension: .txt
                        importer: text_import
                      - file_extension: .docx
                        importer: docx_import
                      - file_extension: .odt
                        importer: odt_import
                      - file_extension: .pdf
                        importer: pdf_import
                  file_size_limits:
                    type: object
                    example: &id022
                      info: size limits (in bytes) for uploaded files
                      data:
                      - name: max_content_length
                        description: max size for one request (which may contain multiple
                          files)
                        value: 104857600
                      - name: max_file_length
                        description: max size for one corpus source file
                        value: 10485760
                      - name: max_corpus_length
                        description: max size for one corpus
                        value: 524288000
                  recommended_file_size:
                    type: object
                    example: &id023
                      info: approximate recommended file sizes (in bytes) when processing
                        many files with Sparv
                      data:
                      - name: max_file_length
                        description: recommended min size for one corpus source file
                        value: 1048576
                      - name: min_file_length
                        description: recommended max size for one corpus source file
                        value: 5242880
                  return_code:
                    type: string
                    example: listing_info
              example:
                status: success
                message: Listing information about data processing
                status_codes: *id020
                importer_modules: *id021
                file_size_limits: *id022
                recommended_file_size: *id023
                return_code: listing_info
      deprecated: false
      security: []
  /sparv-languages:
    get:
      tags:
      - Documentation
      summary: Sparv languages
      description: Lists languages available in Sparv along with their language codes.
      operationId: Sparvlanguages
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Listing languages available in Sparv
                  languages:
                    type: array
                    example: &id024
                    - name: Asturian
                      code: ast
                    - name: Bulgarian
                      code: bul
                    - name: Catalan
                      code: cat
                    - name: Dutch
                      code: nld
                    - name: English
                      code: eng
                    - name: Estonian
                      code: est
                    - name: Finnish
                      code: fin
                    - name: French
                      code: fra
                    - name: Galician
                      code: glg
                    - name: German
                      code: deu
                    - name: Italian
                      code: ita
                    - name: Latin
                      code: lat
                    - name: Norwegian Bokm√•l
                      code: nob
                    - name: Polish
                      code: pol
                    - name: Portuguese
                      code: por
                    - name: Romanian
                      code: ron
                    - name: Russian
                      code: rus
                    - name: Slovak
                      code: slk
                    - name: Slovenian
                      code: slv
                    - name: Spanish
                      code: spa
                    - name: Swedish
                      code: swe
                  return_code:
                    type: string
                    example: listing_languages
              example:
                status: success
                message: Listing languages available in Sparv
                languages: *id024
                return_code: listing_languages
      deprecated: false
      security: []
  /sparv-exports:
    get:
      tags:
      - Documentation
      summary: Sparv exports
      description: 'Lists Sparv export formats for the chosen language. The language
        is specified with the `language` query parameter (or the `languange` key in
        the form) as ISO 639-3 code. See available languages by calling [{{host}}/sparv-languages](`{{host}}/sparv-languages`).


        If no language is supplied Swedish (`swe`) is chosen automatically.'
      operationId: Sparvexports
      parameters:
      - name: language
        in: query
        required: false
        style: form
        schema:
          type: string
          example: swe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Listing exports available in Sparv
                  language:
                    type: string
                    example: swe
                  exports:
                    type: array
                    example: &id025
                    - export: xml_export:pretty
                      description: XML export with one token element per line
                    - export: conll_export:conllu
                      description: CoNLL-U (SBX version) export
                    - export: csv_export:csv
                      description: CSV export
                    - export: cwb:encode
                      description: CWB encode
                    - export: cwb:encode_scrambled
                      description: CWB encode, scrambled
                    - export: cwb:info
                      description: CWB .info file
                    - export: cwb:info_scrambled
                      description: CWB .info file for scrambled corpus
                    - export: cwb:vrt
                      description: VRT export
                    - export: cwb:vrt_scrambled
                      description: Scrambled VRT export
                    - export: korp:config
                      description: Create Korp config file for the corpus.
                    - export: korp:lemgram_sql
                      description: Lemgram index SQL file for use in Korp
                    - export: korp:timespan_sql
                      description: Timespan SQL data for use in Korp
                    - export: korp:wordpicture_sql
                      description: Word Picture SQL for use in Korp
                    - export: sbx_strix:config
                      description: Create Strix config file for the corpus.
                    - export: stats_export:freq_list
                      description: Corpus word frequency list
                    - export: stats_export:sbx_freq_list
                      description: Corpus word frequency list
                    - export: stats_export:sbx_freq_list_date
                      description: Corpus word frequency list
                    - export: stats_export:sbx_freq_list_simple
                      description: Corpus word frequency list (without Swedish annotations)
                    - export: stats_export:sbx_freq_list_simple_swe
                      description: Corpus word frequency list (without Swedish annotations)
                    - export: version_info:yaml_export
                      description: YAML file containing annotation version info
                    - export: xml_export:combined
                      description: Combined XML export (all results in one file)
                    - export: xml_export:combined_scrambled
                      description: Combined scrambled XML export
                    - export: xml_export:compressed
                      description: Compressed combined XML export
                    - export: xml_export:compressed_scrambled
                      description: Compressed combined scrambled XML export
                    - export: xml_export:preserved_format
                      description: XML export preserving whitespaces from source file
                    - export: xml_export:scrambled
                      description: Scrambled XML export
                  return_code:
                    type: string
                    example: listing_sparv_exports
              example:
                status: success
                message: Listing exports available in Sparv
                language: swe
                exports: *id025
                return_code: listing_sparv_exports
      deprecated: false
      security: []
  /advance-queue:
    put:
      tags:
      - Internal Routes
      summary: advance queue
      description: 'Check the job queue and attempt to advance it.


        1. Unqueue jobs that are done, aborted or erroneous

        2. For jobs with status "annotating", check if process is still running

        3. Run the next job in the queue if there are fewer running jobs than allowed


        For internal use only! This route is called regularly by the queue manager.'
      operationId: advancequeue
      parameters: []
      responses:
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Failed to confirm secret key for protected route
                  return_code:
                    type: string
                    example: failed_confirming_secret_key
              example:
                status: error
                message: Failed to confirm secret key for protected route
                return_code: failed_confirming_secret_key
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Queue advancing completed
                  return_code:
                    type: string
                    example: advanced_queue
              example:
                status: success
                message: Queue advancing completed
                return_code: advanced_queue
      deprecated: false
      security:
      - ApiKeyAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: query
      name: secret_key
security:
- bearerAuth: []
tags:
- name: Manage Corpora
  description: Routes for creating, listing and removing corpora.
- name: Manage Sources
  description: Routes for uploading, listing, downloading and removing corpus source
    files.
- name: Manage Config
  description: Routes for uploading and downloading corpus config files.
- name: Manage Exports
  description: Routes for listing, downloading and removing export files.
- name: Process Corpus
  description: Routes for managing annotation and installation jobs with Sparv and
    checking job status.
- name: Admin Mode
  description: Activate/deactivate admin mode.
- name: Documentation
  description: Routes used for documentation purposes.
- name: Internal Routes
  description: Routes for internal use only. These routes are used by the queue manager
    to advance the job queue.
